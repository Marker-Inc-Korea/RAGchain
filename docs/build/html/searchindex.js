Search.setIndex({
    "docnames": ["KoPrivateGPT", "KoPrivateGPT.DB", "KoPrivateGPT.benchmark", "KoPrivateGPT.benchmark.retrieval", "KoPrivateGPT.llm", "KoPrivateGPT.pipeline", "KoPrivateGPT.preprocess", "KoPrivateGPT.preprocess.loader", "KoPrivateGPT.preprocess.text_splitter", "KoPrivateGPT.reranker", "KoPrivateGPT.reranker.llm", "KoPrivateGPT.reranker.pygaggle", "KoPrivateGPT.reranker.pygaggle.model", "KoPrivateGPT.reranker.tart", "KoPrivateGPT.reranker.upr", "KoPrivateGPT.retrieval", "KoPrivateGPT.schema", "KoPrivateGPT.utils", "KoPrivateGPT.utils.embed", "KoPrivateGPT.utils.linker", "KoPrivateGPT.utils.vectorstore", "index", "modules"],
    "filenames": ["KoPrivateGPT.rst", "KoPrivateGPT.DB.rst", "KoPrivateGPT.benchmark.rst", "KoPrivateGPT.benchmark.retrieval.rst", "KoPrivateGPT.llm.rst", "KoPrivateGPT.pipeline.rst", "KoPrivateGPT.preprocess.rst", "KoPrivateGPT.preprocess.loader.rst", "KoPrivateGPT.preprocess.text_splitter.rst", "KoPrivateGPT.reranker.rst", "KoPrivateGPT.reranker.llm.rst", "KoPrivateGPT.reranker.pygaggle.rst", "KoPrivateGPT.reranker.pygaggle.model.rst", "KoPrivateGPT.reranker.tart.rst", "KoPrivateGPT.reranker.upr.rst", "KoPrivateGPT.retrieval.rst", "KoPrivateGPT.schema.rst", "KoPrivateGPT.utils.rst", "KoPrivateGPT.utils.embed.rst", "KoPrivateGPT.utils.linker.rst", "KoPrivateGPT.utils.vectorstore.rst", "index.rst", "modules.rst"],
    "titles": ["KoPrivateGPT package", "KoPrivateGPT.DB package", "KoPrivateGPT.benchmark package", "KoPrivateGPT.benchmark.retrieval package", "KoPrivateGPT.llm package", "KoPrivateGPT.pipeline package", "KoPrivateGPT.preprocess package", "KoPrivateGPT.preprocess.loader package", "KoPrivateGPT.preprocess.text_splitter package", "KoPrivateGPT.reranker package", "KoPrivateGPT.reranker.llm package", "KoPrivateGPT.reranker.pygaggle package", "KoPrivateGPT.reranker.pygaggle.model package", "KoPrivateGPT.reranker.tart package", "KoPrivateGPT.reranker.upr package", "KoPrivateGPT.retrieval package", "KoPrivateGPT.schema package", "KoPrivateGPT.utils package", "KoPrivateGPT.utils.embed package", "KoPrivateGPT.utils.linker package", "KoPrivateGPT.utils.vectorstore package", "Welcome to KoPrivateGPT\u2019s documentation!", "KoPrivateGPT"],
    "terms": {
        "db": [0, 15, 17, 18, 22],
        "submodul": [0, 6, 22],
        "base": [0, 3, 6, 7, 10, 12, 13, 14, 16, 17, 18, 19, 22],
        "basedb": [0, 1, 15, 17],
        "creat": [0, 1, 4, 13],
        "create_or_load": [0, 1],
        "db_type": [0, 1, 5, 15, 16, 18],
        "fetch": [0, 1],
        "get_db_origin": [0, 1],
        "load": [0, 1, 6, 7],
        "save": [0, 1, 2],
        "search": [0, 1, 21],
        "mongo_db": [0, 15, 22],
        "mongodb": [0, 1],
        "set_db": [0, 1],
        "pickle_db": [0, 22],
        "pickledb": [0, 1],
        "benchmark": [0, 22],
        "retriev": [0, 2, 4, 5, 9, 10, 11, 13, 14, 17, 18, 22],
        "main": [0, 2],
        "metric": [0, 2],
        "util": [0, 22],
        "cos_sim": [0, 2],
        "dot_scor": [0, 2],
        "download_and_unzip": [0, 2],
        "download_url": [0, 2],
        "unzip": [0, 2],
        "write_to_json": [0, 2],
        "write_to_tsv": [0, 2],
        "llm": [0, 9, 11, 13, 14, 22],
        "basellm": [0, 4],
        "add_chat_histori": [0, 4],
        "ask": [0, 4],
        "clear_chat_histori": [0, 4],
        "gener": [0, 4, 17],
        "generate_chat": [0, 4],
        "stream_end_token": [0, 4],
        "basic": [0, 22],
        "basicllm": [0, 4],
        "chat_histori": [0, 4],
        "chat_offset": [0, 4],
        "get_messag": [0, 4],
        "retrieved_passag": [0, 4],
        "rerank": [0, 17, 22],
        "rerankllm": [0, 4],
        "viscond": [0, 17, 22],
        "viscondellm": [0, 4],
        "strategyqa_prompt": [0, 4],
        "pipelin": [0, 22],
        "basepipelin": [0, 5],
        "run": [0, 4, 5, 13],
        "basicdatasetpipelin": [0, 5],
        "basicingestpipelin": [0, 5],
        "basicrunpipelin": [0, 5],
        "selector": [0, 15, 22],
        "moduleselector": [0, 5, 15],
        "get": [0, 4, 5, 17, 18],
        "select": [0, 5],
        "select_db": [0, 5],
        "select_file_load": [0, 5],
        "select_llm": [0, 5],
        "select_retriev": [0, 5],
        "select_text_splitt": [0, 5],
        "preprocess": [0, 22],
        "loader": [0, 5, 6],
        "dataset_load": [0, 6],
        "excel_load": [0, 6],
        "file_load": [0, 5, 6],
        "hwp_loader": [0, 6],
        "mathpix_markdown_load": [0, 6],
        "nougat_pdf_load": [0, 6],
        "pdf_link_load": [0, 6],
        "text_splitt": [0, 6],
        "rank_gpt": [0, 9],
        "pygaggl": [0, 9],
        "monot5": [0, 9],
        "transform": [0, 9],
        "tart": [0, 9],
        "modeling_enc_t5": [0, 9],
        "tokenization_enc_t5": [0, 9],
        "upr": [0, 9],
        "basererank": [0, 4, 9, 10, 11, 13, 14],
        "rerank_sliding_window": [0, 9, 10, 11, 13, 14],
        "baseretriev": [0, 4, 15],
        "create_db": [0, 15],
        "duplicate_check": [0, 15],
        "fetch_data": [0, 15],
        "fetch_data_from_db_origin": [0, 15],
        "fetch_each_db": [0, 15],
        "ingest": [0, 5, 15],
        "is_creat": [0, 15],
        "retrieve_id": [0, 15],
        "retrieve_id_with_scor": [0, 15],
        "retrieve_with_filt": [0, 15],
        "search_data": [0, 15],
        "search_data_from_db_origin": [0, 15],
        "search_each_db": [0, 15],
        "bm25_retriev": [0, 22],
        "bm25retriev": [0, 15],
        "load_data": [0, 15],
        "persist": [0, 15],
        "hybrid": [0, 22],
        "hybridretriev": [0, 15],
        "min_max_norm": [0, 15],
        "retrieve_id_with_scores_parallel": [0, 15],
        "hyde": [0, 22],
        "hyderetriev": [0, 15],
        "basic_system_prompt": [0, 15],
        "make_prompt": [0, 15],
        "vectordb_retriev": [0, 22],
        "vectordbretriev": [0, 15],
        "schema": [0, 22],
        "db_origin": [0, 15, 22],
        "dborigin": [0, 1, 16],
        "db_path": [0, 15, 16],
        "to_dict": [0, 16],
        "passag": [0, 1, 4, 5, 8, 9, 10, 11, 13, 14, 15, 17, 20, 22],
        "filepath": [0, 1, 7, 15, 16],
        "id": [0, 1, 11, 13, 15, 16, 19],
        "is_exactly_sam": [0, 16],
        "metadata_etc": [0, 1, 15, 16],
        "next_passage_id": [0, 16],
        "previous_passage_id": [0, 16],
        "to_docu": [0, 16],
        "emb": [0, 17, 20],
        "delete_embed": [0, 17],
        "embeddingfactori": [0, 17],
        "linker": [0, 17, 18],
        "redisdbsingleton": [0, 17],
        "vectorstor": [0, 15, 17],
        "chroma": [0, 17],
        "pinecon": [0, 17],
        "evidence_extractor": [0, 22],
        "evidenceextractor": [0, 17],
        "extract": [0, 1, 17],
        "file_cach": [0, 22],
        "filecach": [0, 17],
        "delete_dupl": [0, 17],
        "query_decompos": [0, 22],
        "querydecomposit": [0, 17],
        "decompos": [0, 17],
        "decompose_prompt": [0, 17],
        "filecheck": [0, 17],
        "check_typ": [0, 17],
        "is_exist": [0, 17],
        "stoppingcriteriasub": [0, 17],
        "set_api_bas": [0, 17],
        "slice_stop_word": [0, 17],
        "text_modifi": [0, 17],
        "class": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
        "abc": [1, 3, 4, 5, 8, 9, 15, 20],
        "abstract": [1, 3, 4, 5, 8, 9, 11, 15, 20],
        "arg": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 15, 19],
        "kwarg": [1, 4, 5, 7, 8, 10, 11, 12, 13, 15, 19, 20],
        "properti": [1, 3],
        "str": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
        "list": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20],
        "uuid": [1, 15, 16, 19, 20],
        "none": [1, 4, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 20],
        "from": [1, 3, 4, 7, 10, 11, 13],
        "us": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 14, 17],
        "filter": [1, 15],
        "dict": [1, 2, 3, 4, 5, 10, 13, 15, 16, 17, 20],
        "thi": [1, 4, 5, 9, 10, 11, 13, 14, 15, 17, 18, 21],
        "function": [1, 9, 10, 11, 13, 14],
        "can": [1, 3, 21],
        "you": [1, 10, 17, 21],
        "add": [1, 18],
        "more": [1, 10, 17],
        "condit": [1, 15],
        "i": [1, 2, 3, 4, 7, 9, 10, 11, 13, 14, 17, 18],
        "an": [1, 4, 11, 18],
        "implicit": [1, 3],
        "AND": 1,
        "oper": 1,
        "mongo_url": [1, 15],
        "db_name": [1, 15],
        "collection_nam": [1, 15, 20],
        "With": [1, 4, 17],
        "": [1, 4, 11, 13, 17],
        "find": 1,
        "param": [1, 7, 9, 10, 11, 13, 14, 15, 17],
        "filter_dict": [1, 15],
        "queri": [1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 17],
        "return": [1, 2, 4, 7, 9, 10, 13, 14, 17],
        "result": [1, 3, 15, 17],
        "save_path": [1, 2, 15, 18],
        "which": [1, 3, 4, 13, 15, 17],
        "match": [1, 15],
        "all": [1, 2, 7, 13, 17],
        "valu": [1, 3, 13, 18, 20],
        "correspond": 1,
        "kei": [1, 10],
        "when": [1, 4, 9, 10, 11, 13, 14, 15, 17],
        "exist": [1, 4],
        "empti": [1, 17, 20],
        "basic_retrieval_evalu": [2, 3],
        "strategyqa": [2, 3],
        "stretagyqa_retrieval_evalu": [2, 3],
        "apfactori": [2, 3],
        "retrieval_metric_funct": [2, 3],
        "baseretrievalmetricfactori": [2, 3],
        "eval": [2, 3],
        "metric_nam": [2, 3],
        "cgfactori": [2, 3],
        "dcgfactori": [2, 3],
        "exactlymatchfactori": [2, 3],
        "f1factori": [2, 3],
        "holefactori": [2, 3],
        "idcgfactori": [2, 3],
        "inddcgfactori": [2, 3],
        "indidcgfactori": [2, 3],
        "ndcgfactori": [2, 3],
        "precisionfactori": [2, 3],
        "rrfactori": [2, 3],
        "recallfactori": [2, 3],
        "topkaccuracyfactori": [2, 3],
        "tensor": [2, 12],
        "b": [2, 13],
        "comput": [2, 3, 13],
        "cosin": [2, 20],
        "similar": 2,
        "j": 2,
        "matrix": 2,
        "re": 2,
        "dot": [2, 7],
        "product": 2,
        "dot_prod": 2,
        "url": [2, 4, 7, 17],
        "out_dir": 2,
        "chunk_siz": [2, 5],
        "int": [2, 3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 20],
        "1024": 2,
        "download": [2, 7],
        "progress": 2,
        "bar": 2,
        "tqdm": 2,
        "http": [2, 3, 4, 10, 11, 17],
        "stackoverflow": 2,
        "com": [2, 3, 10, 11],
        "question": [2, 3, 4, 14, 15, 17],
        "15644964": 2,
        "python": 2,
        "local": 2,
        "path": [2, 7],
        "file": [2, 3, 5, 7, 18, 21],
        "option": [2, 4, 7, 11, 13, 17],
        "chunk": 2,
        "default": [2, 13, 15],
        "zip_fil": 2,
        "output_fil": 2,
        "data": [2, 3, 7, 15],
        "qrel": 3,
        "float": [3, 11, 14, 15, 20],
        "k_valu": 3,
        "paramet": [3, 4, 7, 9, 10, 13, 14, 17],
        "The": [3, 4, 5, 7, 9, 10, 11, 13, 14, 17, 20],
        "dictionari": 3,
        "query_id": 3,
        "doc_id": 3,
        "relev": [3, 17],
        "score": [3, 11],
        "k": 3,
        "evalu": 3,
        "should": [3, 13, 21],
        "done": 3,
        "differ": 3,
        "solut": 3,
        "pred": 3,
        "metrics_factori": 3,
        "articl": 3,
        "geva2021strategyqa": 3,
        "titl": [3, 4, 11, 17],
        "did": [3, 4],
        "aristotl": 3,
        "laptop": 3,
        "A": [3, 5, 7, 9, 10, 11, 13, 14, 17],
        "answer": [3, 4, 15, 17],
        "reason": 3,
        "strategi": 3,
        "author": [3, 4, 17],
        "geva": 3,
        "mor": 3,
        "khashabi": 3,
        "daniel": 3,
        "segal": 3,
        "elad": 3,
        "khot": 3,
        "tushar": 3,
        "roth": 3,
        "dan": 3,
        "berant": 3,
        "jonathan": 3,
        "journal": 3,
        "transact": 3,
        "associ": 3,
        "linguist": 3,
        "tacl": 3,
        "year": [3, 4, 17],
        "2021": 3,
        "note": 3,
        "github": [3, 4, 10, 11, 17],
        "eladseg": 3,
        "blob": [3, 11],
        "dev": 3,
        "json": 3,
        "1": [3, 4, 13, 17],
        "reciproc": 3,
        "rank": [3, 9, 10, 11, 13, 14],
        "rr": 3,
        "first": 3,
        "item": [3, 10],
        "mean": 3,
        "whole": 3,
        "mrr": 3,
        "stream": 4,
        "bool": [4, 5, 7, 8, 11, 12, 13, 14],
        "fals": [4, 10, 11, 13, 14],
        "run_retriev": 4,
        "true": [4, 5, 7, 8, 12],
        "tupl": [4, 5, 12, 14, 15],
        "model": [4, 9, 10, 11, 13, 14, 17],
        "openai": [4, 17, 18],
        "api": [4, 7],
        "classmethod": 4,
        "prompt": [4, 15, 17],
        "stream_func": 4,
        "callabl": [4, 20],
        "If": [4, 7],
        "each": [4, 17],
        "respons": [4, 7, 10],
        "And": [4, 17],
        "cl": 4,
        "end": 4,
        "messag": [4, 10],
        "top_k": [4, 15],
        "5": [4, 5, 10, 15, 17],
        "endofstream": 4,
        "model_nam": [4, 5, 10, 11, 14, 15, 17],
        "gpt": [4, 5, 10, 15, 17],
        "3": [4, 5, 10, 15, 17],
        "turbo": [4, 5, 10, 15, 17],
        "api_bas": [4, 5, 10, 15, 17],
        "prompt_func": 4,
        "static": [4, 7, 11, 15],
        "retrieve_s": 4,
        "10": [4, 10, 17, 21],
        "use_passage_count": 4,
        "window_s": [4, 9, 10, 11, 13, 14],
        "code": [4, 10, 11, 17],
        "inspir": [4, 17],
        "paper": [4, 17],
        "its": [4, 17],
        "repo": [4, 10, 17],
        "inproceed": [4, 17],
        "1007": [4, 17],
        "978": [4, 17],
        "031": [4, 17],
        "28238": [4, 17],
        "6_44": [4, 17],
        "pereira": [4, 17],
        "jayr": [4, 17],
        "fidalgo": [4, 17],
        "robson": [4, 17],
        "lotufo": [4, 17],
        "roberto": [4, 17],
        "nogueira": [4, 17],
        "rodrigo": [4, 17],
        "multi": [4, 17],
        "document": [4, 5, 7, 8, 11, 12, 16, 17, 20],
        "qa": [4, 17],
        "nbsp": [4, 17],
        "neural": [4, 17],
        "2023": [4, 17, 21],
        "isbn": [4, 17],
        "28237": [4, 17],
        "9": [4, 17],
        "publish": [4, 17],
        "springer": [4, 17],
        "verlag": [4, 17],
        "address": [4, 17],
        "berlin": [4, 17],
        "heidelberg": [4, 17],
        "doi": [4, 17],
        "org": [4, 17],
        "booktitl": [4, 17],
        "advanc": [4, 17],
        "inform": [4, 10, 17],
        "45th": [4, 17],
        "european": [4, 17],
        "confer": [4, 17],
        "ecir": [4, 17],
        "dublin": [4, 17],
        "ireland": [4, 17],
        "april": [4, 17],
        "2": [4, 15, 17],
        "6": [4, 17],
        "proceed": [4, 17],
        "part": [4, 17],
        "ii": [4, 17],
        "page": [4, 7, 17, 21],
        "534": [4, 17],
        "543": [4, 17],
        "numpag": [4, 17],
        "locat": [4, 17],
        "text": [4, 5, 7, 9, 10, 11, 12, 17],
        "davinci": [4, 17],
        "003": [4, 17],
        "decompose_model_nam": 4,
        "50": [4, 5],
        "For": [4, 11, 15],
        "exampl": [4, 11, 15, 17],
        "explan": 4,
        "just": [4, 7],
        "ye": 4,
        "n": [4, 17],
        "san": 4,
        "tropez": 4,
        "song": 4,
        "fourth": 4,
        "track": 4,
        "album": 4,
        "meddl": 4,
        "band": 4,
        "pink": 4,
        "floyd": 4,
        "wa": [4, 9, 10, 11, 13, 14],
        "one": [4, 13, 15],
        "sever": 4,
        "consid": 4,
        "best": 4,
        "echo": 4,
        "french": 4,
        "riviera": 4,
        "known": 4,
        "c\u00f4te": 4,
        "d": 4,
        "azur": 4,
        "kot": 4,
        "da\u02c8zy\u0281": 4,
        "occitan": 4,
        "c\u00f2sta": 4,
        "\u02c8k\u0254st\u0254": 4,
        "da\u02c8zy\u027e": 4,
        "liter": 4,
        "translat": 4,
        "coast": 4,
        "mediterranean": 4,
        "coastlin": 4,
        "southeast": 4,
        "corner": 4,
        "franc": 4,
        "There": 4,
        "offici": 4,
        "boundari": 4,
        "usual": 4,
        "extend": 4,
        "cassi": 4,
        "toulon": 4,
        "saint": 4,
        "west": 4,
        "menton": 4,
        "itali": 4,
        "border": 4,
        "east": 4,
        "where": 4,
        "italian": 4,
        "join": 4,
        "entir": 4,
        "within": [4, 13],
        "provenc": 4,
        "alp": 4,
        "r\u00e9gion": 4,
        "sud": 4,
        "region": 4,
        "princip": 4,
        "monaco": 4,
        "semi": 4,
        "enclav": 4,
        "surround": 4,
        "three": 4,
        "side": 4,
        "front": 4,
        "moon": 4,
        "jae": 4,
        "also": 4,
        "promis": 4,
        "transpar": 4,
        "hi": 4,
        "presid": 4,
        "move": 4,
        "presidenti": 4,
        "resid": 4,
        "palati": 4,
        "isol": 4,
        "blue": 4,
        "hous": 4,
        "govern": 4,
        "complex": 4,
        "downtown": 4,
        "seoul": 4,
        "4": [4, 7, 17],
        "u": [4, 17],
        "\u02ccs\u00e6n": 4,
        "tro\u028a\u02c8pe\u026a": 4,
        "troh": 4,
        "pai": 4,
        "s\u025b": 4,
        "t\u0281\u0254pe": 4,
        "sant": 4,
        "tropetz": 4,
        "pronounc": 4,
        "t": [4, 20],
        "t\u0280u\u02c8p": 4,
        "town": 4,
        "68": 4,
        "kilometr": 4,
        "42": 4,
        "mile": 4,
        "nice": 4,
        "100": [4, 10, 13],
        "62": 4,
        "marseil": 4,
        "var": 4,
        "depart": 4,
        "occitania": 4,
        "southern": 4,
        "have": [4, 17],
        "about": 4,
        "accord": 4,
        "further": 4,
        "support": [4, 20],
        "state": [4, 13],
        "therefor": [4, 13],
        "baseload": [5, 7],
        "retrieval_typ": 5,
        "ani": [5, 11, 13, 20],
        "text_splitter_typ": 5,
        "recursive_text_splitt": 5,
        "chunk_overlap": 5,
        "500": [5, 15],
        "ignore_existed_fil": 5,
        "repres": [5, 9, 10, 11, 13, 14],
        "handl": 5,
        "process": 5,
        "databas": 5,
        "system": 5,
        "attribut": 5,
        "langchain": [5, 20],
        "document_load": 5,
        "instanc": [5, 13, 17],
        "want": 5,
        "type": [5, 9, 10, 11, 13, 14, 15],
        "configur": 5,
        "splitter": 5,
        "flag": 5,
        "indic": 5,
        "whether": [5, 13],
        "ignor": [5, 13],
        "alreadi": [5, 13],
        "method": [5, 13, 15, 17],
        "target_dir": [5, 7],
        "llm_type": 5,
        "basic_llm": 5,
        "module_nam": 5,
        "object": [5, 7, 9, 10, 11, 12, 13, 14, 17, 18, 19],
        "name": 5,
        "kostrategyqaload": [6, 7],
        "excelload": [6, 7],
        "lazy_load": [6, 7],
        "fileload": [6, 7],
        "hwploader": [6, 7],
        "async_request": [6, 7],
        "mathpixmarkdownload": [6, 7],
        "split_sect": [6, 7],
        "split_tabl": [6, 7],
        "nougatpdfload": [6, 7],
        "pdflinkload": [6, 7],
        "valid_url": [6, 7],
        "basetextsplitt": [6, 8],
        "split_docu": [6, 8],
        "recursivetextsplitt": [6, 8],
        "kostrategyqa": 7,
        "dataset": 7,
        "huggingfac": 7,
        "via": 7,
        "internet": 7,
        "sheet_nam": 7,
        "iter": [7, 12],
        "lazi": 7,
        "hwp_host_url": 7,
        "filter_ext": 7,
        "target": 7,
        "directori": 7,
        "onli": 7,
        "given": [7, 17],
        "extens": 7,
        "element": 7,
        "must": [7, 15, 20],
        "contain": [7, 11, 17, 21],
        "prefix": 7,
        "retry_connect": 7,
        "hwp": 7,
        "convert": 7,
        "textload": 7,
        "async": 7,
        "split": 7,
        "tabl": 7,
        "mathpix": 7,
        "markdown": 7,
        "odd": 7,
        "index": [7, 20, 21],
        "without": 7,
        "even": [7, 11],
        "file_path": [7, 17],
        "nougat_host": 7,
        "basepdfload": 7,
        "section": 7,
        "start": 7,
        "number": [7, 10, 17],
        "stop": [7, 17],
        "link": 7,
        "separ": [8, 17],
        "keep_separ": 8,
        "llmrerank": [9, 10],
        "find_passag": [9, 10],
        "make_item": [9, 10],
        "make_passag": [9, 10],
        "safeopenai": [9, 10],
        "chat": [9, 10],
        "clean_respons": [9, 10],
        "create_permutation_instruct": [9, 10],
        "get_post_prompt": [9, 10],
        "get_prefix_prompt": [9, 10],
        "max_token": [9, 10, 17],
        "num_tokens_from_messag": [9, 10],
        "permutation_pipelin": [9, 10],
        "receive_permut": [9, 10],
        "remove_dupl": [9, 10],
        "run_llm": [9, 10],
        "sliding_window": [9, 10],
        "decod": [9, 11],
        "token": [9, 10, 11, 13, 14, 15],
        "rescor": [9, 11],
        "monot5rerank": [9, 11],
        "get_model": [9, 11],
        "get_prediction_token": [9, 11],
        "get_token": [9, 11],
        "enct5forsequenceclassif": [9, 13],
        "deparallel": [9, 13],
        "forward": [9, 13],
        "get_encod": [9, 13],
        "get_input_embed": [9, 13],
        "parallel": [9, 13],
        "set_input_embed": [9, 13],
        "train": [9, 13],
        "tartrerank": [9, 13],
        "enct5token": [9, 13],
        "build_inputs_with_special_token": [9, 13],
        "create_token_type_ids_from_sequ": [9, 13],
        "get_special_tokens_mask": [9, 13],
        "uprrerank": [9, 14],
        "calculate_likelihood": [9, 14],
        "specif": [9, 10, 11, 13, 14],
        "algorithm": [9, 10, 11, 13, 14],
        "slide": [9, 10, 11, 13, 14],
        "window": [9, 10, 11, 13, 14],
        "input": [9, 10, 11, 13, 14],
        "size": [9, 10, 11, 13, 14],
        "limit": [9, 10, 11, 13, 14],
        "like": [9, 10, 11, 13, 14, 15, 21],
        "origin": [10, 11, 15],
        "rankgpt": 10,
        "sunnweiwei": 10,
        "modifi": 10,
        "fit": 10,
        "framework": 10,
        "target_passag": 10,
        "original_passag": 10,
        "littl": [10, 17],
        "bit": 10,
        "integr": 10,
        "pleas": [10, 14, 15],
        "go": 10,
        "need": [10, 13, 17],
        "start_id": 10,
        "proxi": 10,
        "return_text": 10,
        "reduce_length": 10,
        "rank_start": 10,
        "0": [10, 11, 13, 15, 17],
        "rank_end": 10,
        "num": 10,
        "0301": 10,
        "api_kei": 10,
        "permut": 10,
        "20": 10,
        "step": 10,
        "greedy_decod": [11, 12],
        "duoquerydocumentbatch": [11, 12],
        "doc_pair": [11, 12],
        "output": [11, 12, 17],
        "querydocumentbatch": [11, 12],
        "querydocumentbatchtoken": [11, 12],
        "traverse_duo_query_docu": [11, 12],
        "traverse_query_docu": [11, 12],
        "t5batchtoken": [11, 12],
        "tokenizerencodemixin": [11, 12],
        "encod": [11, 12],
        "tokenizer_kwarg": [11, 12],
        "itself": 11,
        "potenti": 11,
        "other": [11, 16],
        "metadata": [11, 16, 20],
        "take": [11, 13],
        "non": 11,
        "destruct": 11,
        "e": 11,
        "doe": [11, 13],
        "alter": 11,
        "sort": 11,
        "respect": 11,
        "map": [11, 12, 13],
        "unspecifi": 11,
        "length": [11, 12],
        "principl": 11,
        "could": 11,
        "full": 11,
        "paragraph": 11,
        "short": 11,
        "phrase": 11,
        "addit": 11,
        "annot": 11,
        "might": 11,
        "bm25": 11,
        "initi": [11, 17],
        "stage": 11,
        "castorini": 11,
        "3b": 11,
        "msmarco": 11,
        "10k": 11,
        "use_amp": 11,
        "token_fals": 11,
        "token_tru": 11,
        "master": 11,
        "py": 11,
        "pretrained_model_name_or_path": 11,
        "t5forconditionalgener": 11,
        "devic": 11,
        "batch_siz": [11, 12, 20],
        "8": [11, 15],
        "implement": 11,
        "pretrainedmodel": 12,
        "input_id": [12, 13],
        "attention_mask": [12, 13],
        "return_last_logit": 12,
        "torch": [12, 13],
        "pretrainedtoken": 12,
        "pattern": 12,
        "batch_input": 12,
        "string": [12, 15, 20],
        "config": [13, 20],
        "t5config": 13,
        "dropout": 13,
        "t5pretrainedmodel": 13,
        "head_mask": 13,
        "inputs_emb": 13,
        "label": 13,
        "output_attent": 13,
        "output_hidden_st": 13,
        "return_dict": 13,
        "defin": 13,
        "perform": 13,
        "everi": 13,
        "call": 13,
        "overridden": 13,
        "subclass": 13,
        "although": 13,
        "recip": 13,
        "pass": [13, 17],
        "afterward": 13,
        "instead": 13,
        "sinc": 13,
        "former": 13,
        "care": 13,
        "regist": 13,
        "hook": 13,
        "while": 13,
        "latter": 13,
        "silent": 13,
        "them": 13,
        "embed": [13, 18, 20],
        "nn": 13,
        "vocabulari": 13,
        "hidden": 13,
        "device_map": 13,
        "new_embed": 13,
        "set": [13, 20],
        "instruct": 13,
        "vocab_fil": 13,
        "bos_token": 13,
        "eos_token": 13,
        "unk_token": 13,
        "unk": 13,
        "pad_token": 13,
        "pad": 13,
        "extra_id": 13,
        "additional_special_token": 13,
        "sp_model_kwarg": 13,
        "t5token": 13,
        "token_ids_0": 13,
        "token_ids_1": 13,
        "build": 13,
        "sequenc": 13,
        "pair": 13,
        "classif": 13,
        "task": 13,
        "concaten": 13,
        "ad": 13,
        "special": 13,
        "ha": 13,
        "follow": 13,
        "format": 13,
        "singl": 13,
        "x": 13,
        "second": 13,
        "glossari": 13,
        "appropri": 13,
        "mask": 13,
        "two": 13,
        "t5": [13, 14],
        "make": 13,
        "zero": 13,
        "already_has_special_token": 13,
        "prepare_for_model": 13,
        "integ": 13,
        "rang": [13, 15],
        "larg": 14,
        "prefix_prompt": 14,
        "suffix_prompt": 14,
        "write": [14, 15],
        "use_bf16": 14,
        "use_gpu": 14,
        "shard_siz": 14,
        "16": [14, 21],
        "context": 14,
        "cant": 15,
        "import": [15, 17],
        "becaus": [15, 20],
        "circular": 15,
        "db_origin_list": 15,
        "check": 15,
        "duplic": 15,
        "target_id": 15,
        "final_db_origin": 15,
        "check_dict": 15,
        "multi_num": 15,
        "retrieve_range_mult": 15,
        "max_trial": 15,
        "count": 15,
        "multipli": 15,
        "fail": 15,
        "enough": 15,
        "max": 15,
        "trial": 15,
        "tokenizer_nam": 15,
        "gpt2": 15,
        "structur": 15,
        "look": 15,
        "2d": 15,
        "passage_id": [15, 20],
        "weight": 15,
        "p": 15,
        "cc": 15,
        "rrf_k": 15,
        "60": 15,
        "arr": 15,
        "ndarrai": 15,
        "seri": 15,
        "system_prompt": [15, 17],
        "model_kwarg": [15, 17],
        "vectordb": 15,
        "serializ": 16,
        "store": [16, 20],
        "delete_embeddings_vectordb": [17, 18],
        "delete_sparse_retrieval_index": [17, 18],
        "embeddingtyp": [17, 18],
        "contriev": [17, 18],
        "kosimcs": [17, 18],
        "ko_sroberta_multitask": [17, 18],
        "multilingual_e5": [17, 18],
        "connection_check": [17, 19],
        "flush_db": [17, 19],
        "get_json": [17, 19],
        "slimvectorstor": [17, 20],
        "add_passag": [17, 20],
        "chromaslim": [17, 20],
        "pineconeslim": [17, 20],
        "fragment": 17,
        "__init__": 17,
        "self": 17,
        "usag": 17,
        "lorem": 17,
        "ipsum": 17,
        "dolor": 17,
        "sit": 17,
        "amet": 17,
        "consectetur": 17,
        "adipisc": 17,
        "elit": 17,
        "sed": 17,
        "do": 17,
        "eiusmod": 17,
        "tempor": 17,
        "incididunt": 17,
        "ut": 17,
        "labor": 17,
        "et": 17,
        "magna": 17,
        "aliqua": 17,
        "what": 17,
        "extractor": 17,
        "print": 17,
        "keyword": 17,
        "argument": 17,
        "custom": 17,
        "piec": 17,
        "sub": 17,
        "decomposit": 17,
        "hamlet": 17,
        "common": 17,
        "imdb": 17,
        "than": 17,
        "comedi": 17,
        "error": 17,
        "how": 17,
        "mani": [17, 20],
        "ar": 17,
        "bird": 17,
        "badminton": 17,
        "legal": 17,
        "licens": 17,
        "child": 17,
        "drive": 17,
        "merced": 17,
        "benz": 17,
        "emploi": 17,
        "minimum": 17,
        "ag": 17,
        "someon": 17,
        "cucumb": 17,
        "same": 17,
        "textur": 17,
        "hydrogen": 17,
        "atom": 17,
        "squar": 17,
        "exce": 17,
        "spice": 17,
        "girl": 17,
        "250": 17,
        "temperatur": 17,
        "file_typ": 17,
        "encount": 17,
        "stoppingcriteria": 17,
        "input_str": 17,
        "stop_word": 17,
        "modify_word": 17,
        "word": 17,
        "underbar": 17,
        "_": 17,
        "warn": 18,
        "deprec": 18,
        "we": 18,
        "proper": 18,
        "wai": 18,
        "delet": 18,
        "etc": 18,
        "todo": 18,
        "featur": 18,
        "118": 18,
        "embed_typ": 18,
        "device_typ": 18,
        "cuda": 18,
        "enum": 18,
        "enumer": 18,
        "ko": 18,
        "sroberta": 18,
        "multitask": 18,
        "multilingu": 18,
        "e5": 18,
        "multipl": 20,
        "includ": 20,
        "vector": 20,
        "don": 20,
        "embedding_funct": 20,
        "persist_directori": 20,
        "client_set": 20,
        "chromadb": 20,
        "collection_metadata": 20,
        "client": 20,
        "relevance_score_fn": 20,
        "text_kei": 20,
        "namespac": 20,
        "distance_strategi": 20,
        "distancestrategi": 20,
        "32": 20,
        "sphinx": 21,
        "quickstart": 21,
        "sat": 21,
        "oct": 21,
        "7": 21,
        "56": 21,
        "adapt": 21,
        "complet": 21,
        "your": 21,
        "least": 21,
        "root": 21,
        "toctre": 21,
        "direct": 21,
        "modul": [21, 22],
        "packag": 22,
        "subpackag": 22,
        "content": 22
    },
    "objects": {
        "": [[0, 0, 0, "-", "KoPrivateGPT"]],
        "KoPrivateGPT": [[1, 0, 0, "-", "DB"], [2, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "llm"], [5, 0, 0, "-", "pipeline"], [6, 0, 0, "-", "preprocess"], [9, 0, 0, "-", "reranker"], [15, 0, 0, "-", "retrieval"], [16, 0, 0, "-", "schema"], [17, 0, 0, "-", "utils"]],
        "KoPrivateGPT.DB": [[1, 0, 0, "-", "base"], [1, 0, 0, "-", "mongo_db"], [1, 0, 0, "-", "pickle_db"]],
        "KoPrivateGPT.DB.base": [[1, 1, 1, "", "BaseDB"]],
        "KoPrivateGPT.DB.base.BaseDB": [[1, 2, 1, "", "create"], [1, 2, 1, "", "create_or_load"], [1, 3, 1, "", "db_type"], [1, 2, 1, "", "fetch"], [1, 2, 1, "", "get_db_origin"], [1, 2, 1, "", "load"], [1, 2, 1, "", "save"], [1, 2, 1, "", "search"]],
        "KoPrivateGPT.DB.mongo_db": [[1, 1, 1, "", "MongoDB"]],
        "KoPrivateGPT.DB.mongo_db.MongoDB": [[1, 2, 1, "", "create"], [1, 2, 1, "", "create_or_load"], [1, 3, 1, "", "db_type"], [1, 2, 1, "", "fetch"], [1, 2, 1, "", "get_db_origin"], [1, 2, 1, "", "load"], [1, 2, 1, "", "save"], [1, 2, 1, "", "search"], [1, 2, 1, "", "set_db"]],
        "KoPrivateGPT.DB.pickle_db": [[1, 1, 1, "", "PickleDB"]],
        "KoPrivateGPT.DB.pickle_db.PickleDB": [[1, 2, 1, "", "create"], [1, 2, 1, "", "create_or_load"], [1, 3, 1, "", "db_type"], [1, 2, 1, "", "fetch"], [1, 2, 1, "", "get_db_origin"], [1, 2, 1, "", "load"], [1, 2, 1, "", "save"], [1, 2, 1, "", "search"]],
        "KoPrivateGPT.benchmark": [[3, 0, 0, "-", "retrieval"], [2, 0, 0, "-", "util"]],
        "KoPrivateGPT.benchmark.retrieval": [[3, 0, 0, "-", "main"], [3, 0, 0, "-", "metrics"]],
        "KoPrivateGPT.benchmark.retrieval.main": [[3, 4, 1, "", "basic_retrieval_evaluation"], [3, 4, 1, "", "strategyQA"], [3, 4, 1, "", "stretagyqa_retrieval_evaluation"]],
        "KoPrivateGPT.benchmark.retrieval.metrics": [[3, 1, 1, "", "APFactory"], [3, 1, 1, "", "BaseRetrievalMetricFactory"], [3, 1, 1, "", "CGFactory"], [3, 1, 1, "", "DCGFactory"], [3, 1, 1, "", "ExactlyMatchFactory"], [3, 1, 1, "", "F1Factory"], [3, 1, 1, "", "HoleFactory"], [3, 1, 1, "", "IDCGFactory"], [3, 1, 1, "", "IndDCGFactory"], [3, 1, 1, "", "IndIDCGFactory"], [3, 1, 1, "", "NDCGFactory"], [3, 1, 1, "", "PrecisionFactory"], [3, 1, 1, "", "RRFactory"], [3, 1, 1, "", "RecallFactory"], [3, 1, 1, "", "TopKAccuracyFactory"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.APFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.BaseRetrievalMetricFactory": [[3, 2, 1, "", "eval"], [3, 3, 1, "", "metric_name"], [3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.CGFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.DCGFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.ExactlyMatchFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.F1Factory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.HoleFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.IDCGFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.IndDCGFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.IndIDCGFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.NDCGFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.PrecisionFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.RRFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.RecallFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.retrieval.metrics.TopKAccuracyFactory": [[3, 2, 1, "", "retrieval_metric_function"]],
        "KoPrivateGPT.benchmark.util": [[2, 4, 1, "", "cos_sim"], [2, 4, 1, "", "dot_score"], [2, 4, 1, "", "download_and_unzip"], [2, 4, 1, "", "download_url"], [2, 4, 1, "", "unzip"], [2, 4, 1, "", "write_to_json"], [2, 4, 1, "", "write_to_tsv"]],
        "KoPrivateGPT.llm": [[4, 0, 0, "-", "base"], [4, 0, 0, "-", "basic"], [4, 0, 0, "-", "rerank"], [4, 0, 0, "-", "visconde"]],
        "KoPrivateGPT.llm.base": [[4, 1, 1, "", "BaseLLM"]],
        "KoPrivateGPT.llm.base.BaseLLM": [[4, 2, 1, "", "add_chat_history"], [4, 2, 1, "", "ask"], [4, 2, 1, "", "clear_chat_history"], [4, 2, 1, "", "generate"], [4, 2, 1, "", "generate_chat"], [4, 2, 1, "", "retrieve"], [4, 5, 1, "", "stream_end_token"]],
        "KoPrivateGPT.llm.basic": [[4, 1, 1, "", "BasicLLM"]],
        "KoPrivateGPT.llm.basic.BasicLLM": [[4, 2, 1, "", "ask"], [4, 5, 1, "", "chat_history"], [4, 5, 1, "", "chat_offset"], [4, 2, 1, "", "get_messages"], [4, 5, 1, "", "retrieved_passages"]],
        "KoPrivateGPT.llm.rerank": [[4, 1, 1, "", "RerankLLM"]],
        "KoPrivateGPT.llm.rerank.RerankLLM": [[4, 2, 1, "", "ask"], [4, 5, 1, "", "chat_history"], [4, 5, 1, "", "chat_offset"], [4, 5, 1, "", "retrieved_passages"]],
        "KoPrivateGPT.llm.visconde": [[4, 1, 1, "", "ViscondeLLM"]],
        "KoPrivateGPT.llm.visconde.ViscondeLLM": [[4, 2, 1, "", "ask"], [4, 5, 1, "", "chat_history"], [4, 5, 1, "", "chat_offset"], [4, 5, 1, "", "retrieved_passages"], [4, 5, 1, "", "strategyqa_prompt"]],
        "KoPrivateGPT.pipeline": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "basic"], [5, 0, 0, "-", "selector"]],
        "KoPrivateGPT.pipeline.base": [[5, 1, 1, "", "BasePipeline"]],
        "KoPrivateGPT.pipeline.base.BasePipeline": [[5, 2, 1, "", "run"]],
        "KoPrivateGPT.pipeline.basic": [[5, 1, 1, "", "BasicDatasetPipeline"], [5, 1, 1, "", "BasicIngestPipeline"], [5, 1, 1, "", "BasicRunPipeline"]],
        "KoPrivateGPT.pipeline.basic.BasicDatasetPipeline": [[5, 2, 1, "", "run"]],
        "KoPrivateGPT.pipeline.basic.BasicIngestPipeline": [[5, 2, 1, "", "run"]],
        "KoPrivateGPT.pipeline.basic.BasicRunPipeline": [[5, 2, 1, "", "run"]],
        "KoPrivateGPT.pipeline.selector": [[5, 1, 1, "", "ModuleSelector"]],
        "KoPrivateGPT.pipeline.selector.ModuleSelector": [[5, 2, 1, "", "get"], [5, 2, 1, "", "select"], [5, 2, 1, "", "select_db"], [5, 2, 1, "", "select_file_loader"], [5, 2, 1, "", "select_llm"], [5, 2, 1, "", "select_retrieval"], [5, 2, 1, "", "select_text_splitter"]],
        "KoPrivateGPT.preprocess": [[7, 0, 0, "-", "loader"], [8, 0, 0, "-", "text_splitter"]],
        "KoPrivateGPT.preprocess.loader": [[7, 0, 0, "-", "dataset_loader"], [7, 0, 0, "-", "excel_loader"], [7, 0, 0, "-", "file_loader"], [7, 0, 0, "-", "hwp_loader"], [7, 0, 0, "-", "mathpix_markdown_loader"], [7, 0, 0, "-", "nougat_pdf_loader"], [7, 0, 0, "-", "pdf_link_loader"]],
        "KoPrivateGPT.preprocess.loader.dataset_loader": [[7, 1, 1, "", "KoStrategyQALoader"]],
        "KoPrivateGPT.preprocess.loader.dataset_loader.KoStrategyQALoader": [[7, 2, 1, "", "load"]],
        "KoPrivateGPT.preprocess.loader.excel_loader": [[7, 1, 1, "", "ExcelLoader"]],
        "KoPrivateGPT.preprocess.loader.excel_loader.ExcelLoader": [[7, 2, 1, "", "lazy_load"], [7, 2, 1, "", "load"]],
        "KoPrivateGPT.preprocess.loader.file_loader": [[7, 1, 1, "", "FileLoader"]],
        "KoPrivateGPT.preprocess.loader.file_loader.FileLoader": [[7, 2, 1, "", "lazy_load"], [7, 2, 1, "", "load"]],
        "KoPrivateGPT.preprocess.loader.hwp_loader": [[7, 1, 1, "", "HwpLoader"]],
        "KoPrivateGPT.preprocess.loader.hwp_loader.HwpLoader": [[7, 2, 1, "", "async_request"], [7, 2, 1, "", "lazy_load"], [7, 2, 1, "", "load"]],
        "KoPrivateGPT.preprocess.loader.mathpix_markdown_loader": [[7, 1, 1, "", "MathpixMarkdownLoader"]],
        "KoPrivateGPT.preprocess.loader.mathpix_markdown_loader.MathpixMarkdownLoader": [[7, 2, 1, "", "lazy_load"], [7, 2, 1, "", "load"], [7, 2, 1, "", "split_section"], [7, 2, 1, "", "split_table"]],
        "KoPrivateGPT.preprocess.loader.nougat_pdf_loader": [[7, 1, 1, "", "NougatPDFLoader"]],
        "KoPrivateGPT.preprocess.loader.nougat_pdf_loader.NougatPDFLoader": [[7, 2, 1, "", "lazy_load"], [7, 2, 1, "", "load"]],
        "KoPrivateGPT.preprocess.loader.pdf_link_loader": [[7, 1, 1, "", "PdfLinkLoader"]],
        "KoPrivateGPT.preprocess.loader.pdf_link_loader.PdfLinkLoader": [[7, 2, 1, "", "load"], [7, 2, 1, "", "valid_url"]],
        "KoPrivateGPT.preprocess.text_splitter": [[8, 0, 0, "-", "base"], [8, 0, 0, "-", "text_splitter"]],
        "KoPrivateGPT.preprocess.text_splitter.base": [[8, 1, 1, "", "BaseTextSplitter"]],
        "KoPrivateGPT.preprocess.text_splitter.base.BaseTextSplitter": [[8, 2, 1, "", "split_document"], [8, 2, 1, "", "split_documents"]],
        "KoPrivateGPT.preprocess.text_splitter.text_splitter": [[8, 1, 1, "", "RecursiveTextSplitter"]],
        "KoPrivateGPT.preprocess.text_splitter.text_splitter.RecursiveTextSplitter": [[8, 2, 1, "", "split_document"]],
        "KoPrivateGPT.reranker": [[9, 0, 0, "-", "base"], [10, 0, 0, "-", "llm"], [11, 0, 0, "-", "pygaggle"], [13, 0, 0, "-", "tart"], [14, 0, 0, "-", "upr"]],
        "KoPrivateGPT.reranker.base": [[9, 1, 1, "", "BaseReranker"]],
        "KoPrivateGPT.reranker.base.BaseReranker": [[9, 2, 1, "", "rerank"], [9, 2, 1, "", "rerank_sliding_window"]],
        "KoPrivateGPT.reranker.llm": [[10, 0, 0, "-", "llm"], [10, 0, 0, "-", "rank_gpt"]],
        "KoPrivateGPT.reranker.llm.llm": [[10, 1, 1, "", "LLMReranker"]],
        "KoPrivateGPT.reranker.llm.llm.LLMReranker": [[10, 2, 1, "", "find_passages"], [10, 2, 1, "", "make_item"], [10, 2, 1, "", "make_passages"], [10, 2, 1, "", "rerank"], [10, 2, 1, "", "rerank_sliding_window"]],
        "KoPrivateGPT.reranker.llm.rank_gpt": [[10, 1, 1, "", "SafeOpenai"], [10, 4, 1, "", "clean_response"], [10, 4, 1, "", "create_permutation_instruction"], [10, 4, 1, "", "get_post_prompt"], [10, 4, 1, "", "get_prefix_prompt"], [10, 4, 1, "", "max_tokens"], [10, 4, 1, "", "num_tokens_from_messages"], [10, 4, 1, "", "permutation_pipeline"], [10, 4, 1, "", "receive_permutation"], [10, 4, 1, "", "remove_duplicate"], [10, 4, 1, "", "run_llm"], [10, 4, 1, "", "sliding_windows"]],
        "KoPrivateGPT.reranker.llm.rank_gpt.SafeOpenai": [[10, 2, 1, "", "chat"], [10, 2, 1, "", "text"]],
        "KoPrivateGPT.reranker.pygaggle": [[11, 0, 0, "-", "base"], [12, 0, 0, "-", "model"], [11, 0, 0, "-", "monoT5"], [11, 0, 0, "-", "transformer"]],
        "KoPrivateGPT.reranker.pygaggle.base": [[11, 1, 1, "", "Query"], [11, 1, 1, "", "Reranker"], [11, 1, 1, "", "Text"]],
        "KoPrivateGPT.reranker.pygaggle.base.Reranker": [[11, 2, 1, "", "rerank"], [11, 2, 1, "", "rescore"]],
        "KoPrivateGPT.reranker.pygaggle.model": [[12, 0, 0, "-", "decode"], [12, 0, 0, "-", "tokenize"]],
        "KoPrivateGPT.reranker.pygaggle.model.decode": [[12, 4, 1, "", "greedy_decode"]],
        "KoPrivateGPT.reranker.pygaggle.model.tokenize": [[12, 1, 1, "", "DuoQueryDocumentBatch"], [12, 1, 1, "", "QueryDocumentBatch"], [12, 1, 1, "", "QueryDocumentBatchTokenizer"], [12, 1, 1, "", "T5BatchTokenizer"], [12, 1, 1, "", "TokenizerEncodeMixin"]],
        "KoPrivateGPT.reranker.pygaggle.model.tokenize.DuoQueryDocumentBatch": [[12, 5, 1, "", "doc_pairs"], [12, 5, 1, "", "output"], [12, 5, 1, "", "query"]],
        "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatch": [[12, 5, 1, "", "documents"], [12, 5, 1, "", "output"], [12, 5, 1, "", "query"]],
        "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatchTokenizer": [[12, 2, 1, "", "traverse_duo_query_document"], [12, 2, 1, "", "traverse_query_document"]],
        "KoPrivateGPT.reranker.pygaggle.model.tokenize.TokenizerEncodeMixin": [[12, 2, 1, "", "encode"], [12, 5, 1, "", "tokenizer"], [12, 5, 1, "", "tokenizer_kwargs"]],
        "KoPrivateGPT.reranker.pygaggle.monoT5": [[11, 1, 1, "", "MonoT5Reranker"]],
        "KoPrivateGPT.reranker.pygaggle.monoT5.MonoT5Reranker": [[11, 2, 1, "", "rerank"], [11, 2, 1, "", "rerank_sliding_window"]],
        "KoPrivateGPT.reranker.pygaggle.transformer": [[11, 1, 1, "", "MonoT5"]],
        "KoPrivateGPT.reranker.pygaggle.transformer.MonoT5": [[11, 2, 1, "", "get_model"], [11, 2, 1, "", "get_prediction_tokens"], [11, 2, 1, "", "get_tokenizer"], [11, 2, 1, "", "rescore"]],
        "KoPrivateGPT.reranker.tart": [[13, 0, 0, "-", "modeling_enc_t5"], [13, 0, 0, "-", "tart"], [13, 0, 0, "-", "tokenization_enc_t5"]],
        "KoPrivateGPT.reranker.tart.modeling_enc_t5": [[13, 1, 1, "", "EncT5ForSequenceClassification"]],
        "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification": [[13, 2, 1, "", "deparallelize"], [13, 2, 1, "", "forward"], [13, 2, 1, "", "get_encoder"], [13, 2, 1, "", "get_input_embeddings"], [13, 2, 1, "", "parallelize"], [13, 2, 1, "", "set_input_embeddings"], [13, 5, 1, "", "training"]],
        "KoPrivateGPT.reranker.tart.tart": [[13, 1, 1, "", "TARTReranker"]],
        "KoPrivateGPT.reranker.tart.tart.TARTReranker": [[13, 2, 1, "", "rerank"], [13, 2, 1, "", "rerank_sliding_window"]],
        "KoPrivateGPT.reranker.tart.tokenization_enc_t5": [[13, 1, 1, "", "EncT5Tokenizer"]],
        "KoPrivateGPT.reranker.tart.tokenization_enc_t5.EncT5Tokenizer": [[13, 2, 1, "", "build_inputs_with_special_tokens"], [13, 2, 1, "", "create_token_type_ids_from_sequences"], [13, 2, 1, "", "get_special_tokens_mask"]],
        "KoPrivateGPT.reranker.upr": [[14, 0, 0, "-", "upr"]],
        "KoPrivateGPT.reranker.upr.upr": [[14, 1, 1, "", "UPRReranker"]],
        "KoPrivateGPT.reranker.upr.upr.UPRReranker": [[14, 2, 1, "", "calculate_likelihood"], [14, 2, 1, "", "rerank"], [14, 2, 1, "", "rerank_sliding_window"]],
        "KoPrivateGPT.retrieval": [[15, 0, 0, "-", "base"], [15, 0, 0, "-", "bm25_retrieval"], [15, 0, 0, "-", "hybrid"], [15, 0, 0, "-", "hyde"], [15, 0, 0, "-", "vectordb_retrieval"]],
        "KoPrivateGPT.retrieval.base": [[15, 1, 1, "", "BaseRetrieval"]],
        "KoPrivateGPT.retrieval.base.BaseRetrieval": [[15, 2, 1, "", "create_db"], [15, 2, 1, "", "duplicate_check"], [15, 2, 1, "", "fetch_data"], [15, 2, 1, "", "fetch_data_from_db_origin"], [15, 2, 1, "", "fetch_each_db"], [15, 2, 1, "", "ingest"], [15, 2, 1, "", "is_created"], [15, 2, 1, "", "retrieve"], [15, 2, 1, "", "retrieve_id"], [15, 2, 1, "", "retrieve_id_with_scores"], [15, 2, 1, "", "retrieve_with_filter"], [15, 2, 1, "", "search_data"], [15, 2, 1, "", "search_data_from_db_origin"], [15, 2, 1, "", "search_each_db"]],
        "KoPrivateGPT.retrieval.bm25_retrieval": [[15, 1, 1, "", "BM25Retrieval"]],
        "KoPrivateGPT.retrieval.bm25_retrieval.BM25Retrieval": [[15, 2, 1, "", "ingest"], [15, 2, 1, "", "load_data"], [15, 2, 1, "", "persist"], [15, 2, 1, "", "retrieve"], [15, 2, 1, "", "retrieve_id"], [15, 2, 1, "", "retrieve_id_with_scores"]],
        "KoPrivateGPT.retrieval.hybrid": [[15, 1, 1, "", "HybridRetrieval"]],
        "KoPrivateGPT.retrieval.hybrid.HybridRetrieval": [[15, 2, 1, "", "ingest"], [15, 2, 1, "", "min_max_normalization"], [15, 2, 1, "", "retrieve"], [15, 2, 1, "", "retrieve_id"], [15, 2, 1, "", "retrieve_id_with_scores"], [15, 2, 1, "", "retrieve_id_with_scores_parallel"]],
        "KoPrivateGPT.retrieval.hyde": [[15, 1, 1, "", "HyDERetrieval"]],
        "KoPrivateGPT.retrieval.hyde.HyDERetrieval": [[15, 5, 1, "", "BASIC_SYSTEM_PROMPT"], [15, 2, 1, "", "ingest"], [15, 2, 1, "", "make_prompt"], [15, 2, 1, "", "retrieve"], [15, 2, 1, "", "retrieve_id"], [15, 2, 1, "", "retrieve_id_with_scores"]],
        "KoPrivateGPT.retrieval.vectordb_retrieval": [[15, 1, 1, "", "VectorDBRetrieval"]],
        "KoPrivateGPT.retrieval.vectordb_retrieval.VectorDBRetrieval": [[15, 2, 1, "", "ingest"], [15, 2, 1, "", "retrieve"], [15, 2, 1, "", "retrieve_id"], [15, 2, 1, "", "retrieve_id_with_scores"]],
        "KoPrivateGPT.schema": [[16, 0, 0, "-", "db_origin"], [16, 0, 0, "-", "passage"]],
        "KoPrivateGPT.schema.db_origin": [[16, 1, 1, "", "DBOrigin"]],
        "KoPrivateGPT.schema.db_origin.DBOrigin": [[16, 5, 1, "", "db_path"], [16, 5, 1, "", "db_type"], [16, 2, 1, "", "to_dict"]],
        "KoPrivateGPT.schema.passage": [[16, 1, 1, "", "Passage"]],
        "KoPrivateGPT.schema.passage.Passage": [[16, 5, 1, "", "content"], [16, 5, 1, "", "filepath"], [16, 5, 1, "", "id"], [16, 2, 1, "", "is_exactly_same"], [16, 5, 1, "", "metadata_etc"], [16, 5, 1, "", "next_passage_id"], [16, 5, 1, "", "previous_passage_id"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_document"]],
        "KoPrivateGPT.utils": [[18, 0, 0, "-", "embed"], [17, 0, 0, "-", "evidence_extractor"], [17, 0, 0, "-", "file_cache"], [19, 0, 0, "-", "linker"], [17, 0, 0, "-", "query_decompose"], [17, 0, 0, "-", "util"], [20, 0, 0, "-", "vectorstore"]],
        "KoPrivateGPT.utils.embed": [[18, 0, 0, "-", "delete_embeddings"], [18, 0, 0, "-", "embeddingfactory"]],
        "KoPrivateGPT.utils.embed.delete_embeddings": [[18, 4, 1, "", "delete_embeddings_vectordb"], [18, 4, 1, "", "delete_sparse_retrieval_index"]],
        "KoPrivateGPT.utils.embed.embeddingfactory": [[18, 1, 1, "", "EmbeddingFactory"], [18, 1, 1, "", "EmbeddingType"]],
        "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingFactory": [[18, 2, 1, "", "get"]],
        "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingType": [[18, 5, 1, "", "CONTRIEVER"], [18, 5, 1, "", "KOSIMCSE"], [18, 5, 1, "", "KO_SROBERTA_MULTITASK"], [18, 5, 1, "", "MULTILINGUAL_E5"], [18, 5, 1, "", "OPENAI"]],
        "KoPrivateGPT.utils.evidence_extractor": [[17, 1, 1, "", "EvidenceExtractor"]],
        "KoPrivateGPT.utils.evidence_extractor.EvidenceExtractor": [[17, 2, 1, "", "extract"]],
        "KoPrivateGPT.utils.file_cache": [[17, 1, 1, "", "FileCache"]],
        "KoPrivateGPT.utils.file_cache.FileCache": [[17, 2, 1, "", "delete_duplicate"]],
        "KoPrivateGPT.utils.linker": [[19, 0, 0, "-", "redisdbSingleton"]],
        "KoPrivateGPT.utils.linker.redisdbSingleton": [[19, 1, 1, "", "RedisDBSingleton"]],
        "KoPrivateGPT.utils.linker.redisdbSingleton.RedisDBSingleton": [[19, 2, 1, "", "connection_check"], [19, 2, 1, "", "flush_db"], [19, 2, 1, "", "get_json"]],
        "KoPrivateGPT.utils.query_decompose": [[17, 1, 1, "", "QueryDecomposition"]],
        "KoPrivateGPT.utils.query_decompose.QueryDecomposition": [[17, 2, 1, "", "decompose"], [17, 5, 1, "", "decompose_prompt"], [17, 2, 1, "", "generate"]],
        "KoPrivateGPT.utils.util": [[17, 1, 1, "", "FileChecker"], [17, 1, 1, "", "StoppingCriteriaSub"], [17, 4, 1, "", "set_api_base"], [17, 4, 1, "", "slice_stop_words"], [17, 4, 1, "", "text_modifier"]],
        "KoPrivateGPT.utils.util.FileChecker": [[17, 2, 1, "", "check_type"], [17, 2, 1, "", "is_exist"]],
        "KoPrivateGPT.utils.vectorstore": [[20, 0, 0, "-", "base"], [20, 0, 0, "-", "chroma"], [20, 0, 0, "-", "pinecone"]],
        "KoPrivateGPT.utils.vectorstore.base": [[20, 1, 1, "", "SlimVectorStore"]],
        "KoPrivateGPT.utils.vectorstore.base.SlimVectorStore": [[20, 2, 1, "", "add_passage"], [20, 2, 1, "", "add_passages"]],
        "KoPrivateGPT.utils.vectorstore.chroma": [[20, 1, 1, "", "ChromaSlim"]],
        "KoPrivateGPT.utils.vectorstore.chroma.ChromaSlim": [[20, 2, 1, "", "add_passages"]],
        "KoPrivateGPT.utils.vectorstore.pinecone": [[20, 1, 1, "", "PineconeSlim"]],
        "KoPrivateGPT.utils.vectorstore.pinecone.PineconeSlim": [[20, 2, 1, "", "add_passages"]]
    },
    "objtypes": {
        "0": "py:module",
        "1": "py:class",
        "2": "py:method",
        "3": "py:property",
        "4": "py:function",
        "5": "py:attribute"
    },
    "objnames": {
        "0": ["py", "module", "Python module"],
        "1": ["py", "class", "Python class"],
        "2": ["py", "method", "Python method"],
        "3": ["py", "property", "Python property"],
        "4": ["py", "function", "Python function"],
        "5": ["py", "attribute", "Python attribute"]
    },
    "titleterms": {
        "koprivategpt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
        "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
        "subpackag": [0, 2, 6, 9, 11, 17],
        "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
        "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
        "db": 1,
        "submodul": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
        "base": [1, 4, 5, 8, 9, 11, 15, 20],
        "mongo_db": 1,
        "pickle_db": 1,
        "benchmark": [2, 3],
        "util": [2, 17, 18, 19, 20],
        "retriev": [3, 15],
        "main": 3,
        "metric": 3,
        "llm": [4, 10],
        "basic": [4, 5],
        "rerank": [4, 9, 10, 11, 12, 13, 14],
        "viscond": 4,
        "pipelin": 5,
        "selector": 5,
        "preprocess": [6, 7, 8],
        "loader": 7,
        "dataset_load": 7,
        "excel_load": 7,
        "file_load": 7,
        "hwp_loader": 7,
        "mathpix_markdown_load": 7,
        "nougat_pdf_load": 7,
        "pdf_link_load": 7,
        "text_splitt": 8,
        "rank_gpt": 10,
        "pygaggl": [11, 12],
        "paramet": 11,
        "return": 11,
        "monot5": 11,
        "transform": 11,
        "model": 12,
        "decod": 12,
        "token": 12,
        "tart": 13,
        "modeling_enc_t5": 13,
        "tokenization_enc_t5": 13,
        "upr": 14,
        "bm25_retriev": 15,
        "hybrid": 15,
        "hyde": 15,
        "vectordb_retriev": 15,
        "schema": 16,
        "db_origin": 16,
        "passag": 16,
        "evidence_extractor": 17,
        "file_cach": 17,
        "query_decompos": 17,
        "emb": 18,
        "delete_embed": 18,
        "embeddingfactori": 18,
        "linker": 19,
        "redisdbsingleton": 19,
        "vectorstor": 20,
        "chroma": 20,
        "pinecon": 20,
        "welcom": 21,
        "": 21,
        "document": 21,
        "indic": 21,
        "tabl": 21
    },
    "envversion": {
        "sphinx.domains.c": 3,
        "sphinx.domains.changeset": 1,
        "sphinx.domains.citation": 1,
        "sphinx.domains.cpp": 9,
        "sphinx.domains.index": 1,
        "sphinx.domains.javascript": 3,
        "sphinx.domains.math": 2,
        "sphinx.domains.python": 4,
        "sphinx.domains.rst": 2,
        "sphinx.domains.std": 2,
        "sphinx": 60
    },
    "alltitles": {
        "KoPrivateGPT package": [[0, "koprivategpt-package"]],
        "Subpackages": [[0, "subpackages"], [2, "subpackages"], [6, "subpackages"], [9, "subpackages"], [11, "subpackages"], [17, "subpackages"]],
        "Module contents": [[0, "module-KoPrivateGPT"], [1, "module-KoPrivateGPT.DB"], [2, "module-KoPrivateGPT.benchmark"], [3, "module-KoPrivateGPT.benchmark.retrieval"], [4, "module-KoPrivateGPT.llm"], [5, "module-KoPrivateGPT.pipeline"], [6, "module-KoPrivateGPT.preprocess"], [7, "module-KoPrivateGPT.preprocess.loader"], [8, "module-KoPrivateGPT.preprocess.text_splitter"], [9, "module-KoPrivateGPT.reranker"], [10, "module-KoPrivateGPT.reranker.llm"], [11, "module-KoPrivateGPT.reranker.pygaggle"], [12, "module-KoPrivateGPT.reranker.pygaggle.model"], [13, "module-KoPrivateGPT.reranker.tart"], [14, "module-KoPrivateGPT.reranker.upr"], [15, "module-KoPrivateGPT.retrieval"], [16, "module-KoPrivateGPT.schema"], [17, "module-KoPrivateGPT.utils"], [18, "module-KoPrivateGPT.utils.embed"], [19, "module-KoPrivateGPT.utils.linker"], [20, "module-KoPrivateGPT.utils.vectorstore"]],
        "KoPrivateGPT.DB package": [[1, "koprivategpt-db-package"]],
        "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"]],
        "KoPrivateGPT.DB.base module": [[1, "module-KoPrivateGPT.DB.base"]],
        "KoPrivateGPT.DB.mongo_db module": [[1, "module-KoPrivateGPT.DB.mongo_db"]],
        "KoPrivateGPT.DB.pickle_db module": [[1, "module-KoPrivateGPT.DB.pickle_db"]],
        "KoPrivateGPT.benchmark package": [[2, "koprivategpt-benchmark-package"]],
        "KoPrivateGPT.benchmark.util module": [[2, "module-KoPrivateGPT.benchmark.util"]],
        "KoPrivateGPT.benchmark.retrieval package": [[3, "koprivategpt-benchmark-retrieval-package"]],
        "KoPrivateGPT.benchmark.retrieval.main module": [[3, "module-KoPrivateGPT.benchmark.retrieval.main"]],
        "KoPrivateGPT.benchmark.retrieval.metrics module": [[3, "module-KoPrivateGPT.benchmark.retrieval.metrics"]],
        "KoPrivateGPT.llm package": [[4, "koprivategpt-llm-package"]],
        "KoPrivateGPT.llm.base module": [[4, "module-KoPrivateGPT.llm.base"]],
        "KoPrivateGPT.llm.basic module": [[4, "module-KoPrivateGPT.llm.basic"]],
        "KoPrivateGPT.llm.rerank module": [[4, "module-KoPrivateGPT.llm.rerank"]],
        "KoPrivateGPT.llm.visconde module": [[4, "module-KoPrivateGPT.llm.visconde"]],
        "KoPrivateGPT.pipeline package": [[5, "koprivategpt-pipeline-package"]],
        "KoPrivateGPT.pipeline.base module": [[5, "module-KoPrivateGPT.pipeline.base"]],
        "KoPrivateGPT.pipeline.basic module": [[5, "module-KoPrivateGPT.pipeline.basic"]],
        "KoPrivateGPT.pipeline.selector module": [[5, "module-KoPrivateGPT.pipeline.selector"]],
        "KoPrivateGPT.preprocess package": [[6, "koprivategpt-preprocess-package"]],
        "KoPrivateGPT.preprocess.loader package": [[7, "koprivategpt-preprocess-loader-package"]],
        "KoPrivateGPT.preprocess.loader.dataset_loader module": [[7, "module-KoPrivateGPT.preprocess.loader.dataset_loader"]],
        "KoPrivateGPT.preprocess.loader.excel_loader module": [[7, "module-KoPrivateGPT.preprocess.loader.excel_loader"]],
        "KoPrivateGPT.preprocess.loader.file_loader module": [[7, "module-KoPrivateGPT.preprocess.loader.file_loader"]],
        "KoPrivateGPT.preprocess.loader.hwp_loader module": [[7, "module-KoPrivateGPT.preprocess.loader.hwp_loader"]],
        "KoPrivateGPT.preprocess.loader.mathpix_markdown_loader module": [[7, "module-KoPrivateGPT.preprocess.loader.mathpix_markdown_loader"]],
        "KoPrivateGPT.preprocess.loader.nougat_pdf_loader module": [[7, "module-KoPrivateGPT.preprocess.loader.nougat_pdf_loader"]],
        "KoPrivateGPT.preprocess.loader.pdf_link_loader module": [[7, "module-KoPrivateGPT.preprocess.loader.pdf_link_loader"]],
        "KoPrivateGPT.preprocess.text_splitter package": [[8, "koprivategpt-preprocess-text-splitter-package"]],
        "KoPrivateGPT.preprocess.text_splitter.base module": [[8, "module-KoPrivateGPT.preprocess.text_splitter.base"]],
        "KoPrivateGPT.preprocess.text_splitter.text_splitter module": [[8, "module-KoPrivateGPT.preprocess.text_splitter.text_splitter"]],
        "KoPrivateGPT.reranker package": [[9, "koprivategpt-reranker-package"]],
        "KoPrivateGPT.reranker.base module": [[9, "module-KoPrivateGPT.reranker.base"]],
        "KoPrivateGPT.reranker.llm package": [[10, "koprivategpt-reranker-llm-package"]],
        "KoPrivateGPT.reranker.llm.llm module": [[10, "module-KoPrivateGPT.reranker.llm.llm"]],
        "KoPrivateGPT.reranker.llm.rank_gpt module": [[10, "module-KoPrivateGPT.reranker.llm.rank_gpt"]],
        "KoPrivateGPT.reranker.pygaggle package": [[11, "koprivategpt-reranker-pygaggle-package"]],
        "KoPrivateGPT.reranker.pygaggle.base module": [[11, "module-KoPrivateGPT.reranker.pygaggle.base"]],
        "Parameters": [[11, "parameters"], [11, "id1"], [11, "id2"], [11, "id3"]],
        "Returns": [[11, "returns"], [11, "id4"]],
        "KoPrivateGPT.reranker.pygaggle.monoT5 module": [[11, "module-KoPrivateGPT.reranker.pygaggle.monoT5"]],
        "KoPrivateGPT.reranker.pygaggle.transformer module": [[11, "module-KoPrivateGPT.reranker.pygaggle.transformer"]],
        "KoPrivateGPT.reranker.pygaggle.model package": [[12, "koprivategpt-reranker-pygaggle-model-package"]],
        "KoPrivateGPT.reranker.pygaggle.model.decode module": [[12, "module-KoPrivateGPT.reranker.pygaggle.model.decode"]],
        "KoPrivateGPT.reranker.pygaggle.model.tokenize module": [[12, "module-KoPrivateGPT.reranker.pygaggle.model.tokenize"]],
        "KoPrivateGPT.reranker.tart package": [[13, "koprivategpt-reranker-tart-package"]],
        "KoPrivateGPT.reranker.tart.modeling_enc_t5 module": [[13, "module-KoPrivateGPT.reranker.tart.modeling_enc_t5"]],
        "KoPrivateGPT.reranker.tart.tart module": [[13, "module-KoPrivateGPT.reranker.tart.tart"]],
        "KoPrivateGPT.reranker.tart.tokenization_enc_t5 module": [[13, "module-KoPrivateGPT.reranker.tart.tokenization_enc_t5"]],
        "KoPrivateGPT.reranker.upr package": [[14, "koprivategpt-reranker-upr-package"]],
        "KoPrivateGPT.reranker.upr.upr module": [[14, "module-KoPrivateGPT.reranker.upr.upr"]],
        "KoPrivateGPT.retrieval package": [[15, "koprivategpt-retrieval-package"]],
        "KoPrivateGPT.retrieval.base module": [[15, "module-KoPrivateGPT.retrieval.base"]],
        "KoPrivateGPT.retrieval.bm25_retrieval module": [[15, "module-KoPrivateGPT.retrieval.bm25_retrieval"]],
        "KoPrivateGPT.retrieval.hybrid module": [[15, "module-KoPrivateGPT.retrieval.hybrid"]],
        "KoPrivateGPT.retrieval.hyde module": [[15, "module-KoPrivateGPT.retrieval.hyde"]],
        "KoPrivateGPT.retrieval.vectordb_retrieval module": [[15, "module-KoPrivateGPT.retrieval.vectordb_retrieval"]],
        "KoPrivateGPT.schema package": [[16, "koprivategpt-schema-package"]],
        "KoPrivateGPT.schema.db_origin module": [[16, "module-KoPrivateGPT.schema.db_origin"]],
        "KoPrivateGPT.schema.passage module": [[16, "module-KoPrivateGPT.schema.passage"]],
        "KoPrivateGPT.utils package": [[17, "koprivategpt-utils-package"]],
        "KoPrivateGPT.utils.evidence_extractor module": [[17, "module-KoPrivateGPT.utils.evidence_extractor"]],
        "KoPrivateGPT.utils.file_cache module": [[17, "module-KoPrivateGPT.utils.file_cache"]],
        "KoPrivateGPT.utils.query_decompose module": [[17, "module-KoPrivateGPT.utils.query_decompose"]],
        "KoPrivateGPT.utils.util module": [[17, "module-KoPrivateGPT.utils.util"]],
        "KoPrivateGPT.utils.embed package": [[18, "koprivategpt-utils-embed-package"]],
        "KoPrivateGPT.utils.embed.delete_embeddings module": [[18, "module-KoPrivateGPT.utils.embed.delete_embeddings"]],
        "KoPrivateGPT.utils.embed.embeddingfactory module": [[18, "module-KoPrivateGPT.utils.embed.embeddingfactory"]],
        "KoPrivateGPT.utils.linker package": [[19, "koprivategpt-utils-linker-package"]],
        "KoPrivateGPT.utils.linker.redisdbSingleton module": [[19, "module-KoPrivateGPT.utils.linker.redisdbSingleton"]],
        "KoPrivateGPT.utils.vectorstore package": [[20, "koprivategpt-utils-vectorstore-package"]],
        "KoPrivateGPT.utils.vectorstore.base module": [[20, "module-KoPrivateGPT.utils.vectorstore.base"]],
        "KoPrivateGPT.utils.vectorstore.chroma module": [[20, "module-KoPrivateGPT.utils.vectorstore.chroma"]],
        "KoPrivateGPT.utils.vectorstore.pinecone module": [[20, "module-KoPrivateGPT.utils.vectorstore.pinecone"]],
        "Welcome to KoPrivateGPT\u2019s documentation!": [[21, "welcome-to-koprivategpt-s-documentation"]],
        "Indices and tables": [[21, "indices-and-tables"]],
        "KoPrivateGPT": [[22, "koprivategpt"]]
    },
    "indexentries": {
        "koprivategpt": [[0, "module-KoPrivateGPT"]],
        "module": [[0, "module-KoPrivateGPT"], [1, "module-KoPrivateGPT.DB"], [1, "module-KoPrivateGPT.DB.base"], [1, "module-KoPrivateGPT.DB.mongo_db"], [1, "module-KoPrivateGPT.DB.pickle_db"], [2, "module-KoPrivateGPT.benchmark"], [2, "module-KoPrivateGPT.benchmark.util"], [3, "module-KoPrivateGPT.benchmark.retrieval"], [3, "module-KoPrivateGPT.benchmark.retrieval.main"], [3, "module-KoPrivateGPT.benchmark.retrieval.metrics"], [4, "module-KoPrivateGPT.llm"], [4, "module-KoPrivateGPT.llm.base"], [4, "module-KoPrivateGPT.llm.basic"], [4, "module-KoPrivateGPT.llm.rerank"], [4, "module-KoPrivateGPT.llm.visconde"], [5, "module-KoPrivateGPT.pipeline"], [5, "module-KoPrivateGPT.pipeline.base"], [5, "module-KoPrivateGPT.pipeline.basic"], [5, "module-KoPrivateGPT.pipeline.selector"], [6, "module-KoPrivateGPT.preprocess"], [7, "module-KoPrivateGPT.preprocess.loader"], [7, "module-KoPrivateGPT.preprocess.loader.dataset_loader"], [7, "module-KoPrivateGPT.preprocess.loader.excel_loader"], [7, "module-KoPrivateGPT.preprocess.loader.file_loader"], [7, "module-KoPrivateGPT.preprocess.loader.hwp_loader"], [7, "module-KoPrivateGPT.preprocess.loader.mathpix_markdown_loader"], [7, "module-KoPrivateGPT.preprocess.loader.nougat_pdf_loader"], [7, "module-KoPrivateGPT.preprocess.loader.pdf_link_loader"], [8, "module-KoPrivateGPT.preprocess.text_splitter"], [8, "module-KoPrivateGPT.preprocess.text_splitter.base"], [8, "module-KoPrivateGPT.preprocess.text_splitter.text_splitter"], [9, "module-KoPrivateGPT.reranker"], [9, "module-KoPrivateGPT.reranker.base"], [10, "module-KoPrivateGPT.reranker.llm"], [10, "module-KoPrivateGPT.reranker.llm.llm"], [10, "module-KoPrivateGPT.reranker.llm.rank_gpt"], [11, "module-KoPrivateGPT.reranker.pygaggle"], [11, "module-KoPrivateGPT.reranker.pygaggle.base"], [11, "module-KoPrivateGPT.reranker.pygaggle.monoT5"], [11, "module-KoPrivateGPT.reranker.pygaggle.transformer"], [12, "module-KoPrivateGPT.reranker.pygaggle.model"], [12, "module-KoPrivateGPT.reranker.pygaggle.model.decode"], [12, "module-KoPrivateGPT.reranker.pygaggle.model.tokenize"], [13, "module-KoPrivateGPT.reranker.tart"], [13, "module-KoPrivateGPT.reranker.tart.modeling_enc_t5"], [13, "module-KoPrivateGPT.reranker.tart.tart"], [13, "module-KoPrivateGPT.reranker.tart.tokenization_enc_t5"], [14, "module-KoPrivateGPT.reranker.upr"], [14, "module-KoPrivateGPT.reranker.upr.upr"], [15, "module-KoPrivateGPT.retrieval"], [15, "module-KoPrivateGPT.retrieval.base"], [15, "module-KoPrivateGPT.retrieval.bm25_retrieval"], [15, "module-KoPrivateGPT.retrieval.hybrid"], [15, "module-KoPrivateGPT.retrieval.hyde"], [15, "module-KoPrivateGPT.retrieval.vectordb_retrieval"], [16, "module-KoPrivateGPT.schema"], [16, "module-KoPrivateGPT.schema.db_origin"], [16, "module-KoPrivateGPT.schema.passage"], [17, "module-KoPrivateGPT.utils"], [17, "module-KoPrivateGPT.utils.evidence_extractor"], [17, "module-KoPrivateGPT.utils.file_cache"], [17, "module-KoPrivateGPT.utils.query_decompose"], [17, "module-KoPrivateGPT.utils.util"], [18, "module-KoPrivateGPT.utils.embed"], [18, "module-KoPrivateGPT.utils.embed.delete_embeddings"], [18, "module-KoPrivateGPT.utils.embed.embeddingfactory"], [19, "module-KoPrivateGPT.utils.linker"], [19, "module-KoPrivateGPT.utils.linker.redisdbSingleton"], [20, "module-KoPrivateGPT.utils.vectorstore"], [20, "module-KoPrivateGPT.utils.vectorstore.base"], [20, "module-KoPrivateGPT.utils.vectorstore.chroma"], [20, "module-KoPrivateGPT.utils.vectorstore.pinecone"]],
        "basedb (class in koprivategpt.db.base)": [[1, "KoPrivateGPT.DB.base.BaseDB"]],
        "koprivategpt.db": [[1, "module-KoPrivateGPT.DB"]],
        "koprivategpt.db.base": [[1, "module-KoPrivateGPT.DB.base"]],
        "koprivategpt.db.mongo_db": [[1, "module-KoPrivateGPT.DB.mongo_db"]],
        "koprivategpt.db.pickle_db": [[1, "module-KoPrivateGPT.DB.pickle_db"]],
        "mongodb (class in koprivategpt.db.mongo_db)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB"]],
        "pickledb (class in koprivategpt.db.pickle_db)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB"]],
        "create() (koprivategpt.db.base.basedb method)": [[1, "KoPrivateGPT.DB.base.BaseDB.create"]],
        "create() (koprivategpt.db.mongo_db.mongodb method)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.create"]],
        "create() (koprivategpt.db.pickle_db.pickledb method)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB.create"]],
        "create_or_load() (koprivategpt.db.base.basedb method)": [[1, "KoPrivateGPT.DB.base.BaseDB.create_or_load"]],
        "create_or_load() (koprivategpt.db.mongo_db.mongodb method)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.create_or_load"]],
        "create_or_load() (koprivategpt.db.pickle_db.pickledb method)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB.create_or_load"]],
        "db_type (koprivategpt.db.base.basedb property)": [[1, "KoPrivateGPT.DB.base.BaseDB.db_type"]],
        "db_type (koprivategpt.db.mongo_db.mongodb property)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.db_type"]],
        "db_type (koprivategpt.db.pickle_db.pickledb property)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB.db_type"]],
        "fetch() (koprivategpt.db.base.basedb method)": [[1, "KoPrivateGPT.DB.base.BaseDB.fetch"]],
        "fetch() (koprivategpt.db.mongo_db.mongodb method)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.fetch"]],
        "fetch() (koprivategpt.db.pickle_db.pickledb method)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB.fetch"]],
        "get_db_origin() (koprivategpt.db.base.basedb method)": [[1, "KoPrivateGPT.DB.base.BaseDB.get_db_origin"]],
        "get_db_origin() (koprivategpt.db.mongo_db.mongodb method)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.get_db_origin"]],
        "get_db_origin() (koprivategpt.db.pickle_db.pickledb method)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB.get_db_origin"]],
        "load() (koprivategpt.db.base.basedb method)": [[1, "KoPrivateGPT.DB.base.BaseDB.load"]],
        "load() (koprivategpt.db.mongo_db.mongodb method)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.load"]],
        "load() (koprivategpt.db.pickle_db.pickledb method)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB.load"]],
        "save() (koprivategpt.db.base.basedb method)": [[1, "KoPrivateGPT.DB.base.BaseDB.save"]],
        "save() (koprivategpt.db.mongo_db.mongodb method)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.save"]],
        "save() (koprivategpt.db.pickle_db.pickledb method)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB.save"]],
        "search() (koprivategpt.db.base.basedb method)": [[1, "KoPrivateGPT.DB.base.BaseDB.search"]],
        "search() (koprivategpt.db.mongo_db.mongodb method)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.search"]],
        "search() (koprivategpt.db.pickle_db.pickledb method)": [[1, "KoPrivateGPT.DB.pickle_db.PickleDB.search"]],
        "set_db() (koprivategpt.db.mongo_db.mongodb method)": [[1, "KoPrivateGPT.DB.mongo_db.MongoDB.set_db"]],
        "koprivategpt.benchmark": [[2, "module-KoPrivateGPT.benchmark"]],
        "koprivategpt.benchmark.util": [[2, "module-KoPrivateGPT.benchmark.util"]],
        "cos_sim() (in module koprivategpt.benchmark.util)": [[2, "KoPrivateGPT.benchmark.util.cos_sim"]],
        "dot_score() (in module koprivategpt.benchmark.util)": [[2, "KoPrivateGPT.benchmark.util.dot_score"]],
        "download_and_unzip() (in module koprivategpt.benchmark.util)": [[2, "KoPrivateGPT.benchmark.util.download_and_unzip"]],
        "download_url() (in module koprivategpt.benchmark.util)": [[2, "KoPrivateGPT.benchmark.util.download_url"]],
        "unzip() (in module koprivategpt.benchmark.util)": [[2, "KoPrivateGPT.benchmark.util.unzip"]],
        "write_to_json() (in module koprivategpt.benchmark.util)": [[2, "KoPrivateGPT.benchmark.util.write_to_json"]],
        "write_to_tsv() (in module koprivategpt.benchmark.util)": [[2, "KoPrivateGPT.benchmark.util.write_to_tsv"]],
        "apfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.APFactory"]],
        "baseretrievalmetricfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.BaseRetrievalMetricFactory"]],
        "cgfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.CGFactory"]],
        "dcgfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.DCGFactory"]],
        "exactlymatchfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.ExactlyMatchFactory"]],
        "f1factory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.F1Factory"]],
        "holefactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.HoleFactory"]],
        "idcgfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.IDCGFactory"]],
        "inddcgfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.IndDCGFactory"]],
        "indidcgfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.IndIDCGFactory"]],
        "koprivategpt.benchmark.retrieval": [[3, "module-KoPrivateGPT.benchmark.retrieval"]],
        "koprivategpt.benchmark.retrieval.main": [[3, "module-KoPrivateGPT.benchmark.retrieval.main"]],
        "koprivategpt.benchmark.retrieval.metrics": [[3, "module-KoPrivateGPT.benchmark.retrieval.metrics"]],
        "ndcgfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.NDCGFactory"]],
        "precisionfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.PrecisionFactory"]],
        "rrfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.RRFactory"]],
        "recallfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.RecallFactory"]],
        "topkaccuracyfactory (class in koprivategpt.benchmark.retrieval.metrics)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.TopKAccuracyFactory"]],
        "basic_retrieval_evaluation() (in module koprivategpt.benchmark.retrieval.main)": [[3, "KoPrivateGPT.benchmark.retrieval.main.basic_retrieval_evaluation"]],
        "eval() (koprivategpt.benchmark.retrieval.metrics.baseretrievalmetricfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.BaseRetrievalMetricFactory.eval"]],
        "metric_name (koprivategpt.benchmark.retrieval.metrics.baseretrievalmetricfactory property)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.BaseRetrievalMetricFactory.metric_name"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.apfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.APFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.baseretrievalmetricfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.BaseRetrievalMetricFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.cgfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.CGFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.dcgfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.DCGFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.exactlymatchfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.ExactlyMatchFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.f1factory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.F1Factory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.holefactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.HoleFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.idcgfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.IDCGFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.inddcgfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.IndDCGFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.indidcgfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.IndIDCGFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.ndcgfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.NDCGFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.precisionfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.PrecisionFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.rrfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.RRFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.recallfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.RecallFactory.retrieval_metric_function"]],
        "retrieval_metric_function() (koprivategpt.benchmark.retrieval.metrics.topkaccuracyfactory method)": [[3, "KoPrivateGPT.benchmark.retrieval.metrics.TopKAccuracyFactory.retrieval_metric_function"]],
        "strategyqa() (in module koprivategpt.benchmark.retrieval.main)": [[3, "KoPrivateGPT.benchmark.retrieval.main.strategyQA"]],
        "stretagyqa_retrieval_evaluation() (in module koprivategpt.benchmark.retrieval.main)": [[3, "KoPrivateGPT.benchmark.retrieval.main.stretagyqa_retrieval_evaluation"]],
        "basellm (class in koprivategpt.llm.base)": [[4, "KoPrivateGPT.llm.base.BaseLLM"]],
        "basicllm (class in koprivategpt.llm.basic)": [[4, "KoPrivateGPT.llm.basic.BasicLLM"]],
        "koprivategpt.llm": [[4, "module-KoPrivateGPT.llm"]],
        "koprivategpt.llm.base": [[4, "module-KoPrivateGPT.llm.base"]],
        "koprivategpt.llm.basic": [[4, "module-KoPrivateGPT.llm.basic"]],
        "koprivategpt.llm.rerank": [[4, "module-KoPrivateGPT.llm.rerank"]],
        "koprivategpt.llm.visconde": [[4, "module-KoPrivateGPT.llm.visconde"]],
        "rerankllm (class in koprivategpt.llm.rerank)": [[4, "KoPrivateGPT.llm.rerank.RerankLLM"]],
        "viscondellm (class in koprivategpt.llm.visconde)": [[4, "KoPrivateGPT.llm.visconde.ViscondeLLM"]],
        "add_chat_history() (koprivategpt.llm.base.basellm method)": [[4, "KoPrivateGPT.llm.base.BaseLLM.add_chat_history"]],
        "ask() (koprivategpt.llm.base.basellm method)": [[4, "KoPrivateGPT.llm.base.BaseLLM.ask"]],
        "ask() (koprivategpt.llm.basic.basicllm method)": [[4, "KoPrivateGPT.llm.basic.BasicLLM.ask"]],
        "ask() (koprivategpt.llm.rerank.rerankllm method)": [[4, "KoPrivateGPT.llm.rerank.RerankLLM.ask"]],
        "ask() (koprivategpt.llm.visconde.viscondellm method)": [[4, "KoPrivateGPT.llm.visconde.ViscondeLLM.ask"]],
        "chat_history (koprivategpt.llm.basic.basicllm attribute)": [[4, "KoPrivateGPT.llm.basic.BasicLLM.chat_history"]],
        "chat_history (koprivategpt.llm.rerank.rerankllm attribute)": [[4, "KoPrivateGPT.llm.rerank.RerankLLM.chat_history"]],
        "chat_history (koprivategpt.llm.visconde.viscondellm attribute)": [[4, "KoPrivateGPT.llm.visconde.ViscondeLLM.chat_history"]],
        "chat_offset (koprivategpt.llm.basic.basicllm attribute)": [[4, "KoPrivateGPT.llm.basic.BasicLLM.chat_offset"]],
        "chat_offset (koprivategpt.llm.rerank.rerankllm attribute)": [[4, "KoPrivateGPT.llm.rerank.RerankLLM.chat_offset"]],
        "chat_offset (koprivategpt.llm.visconde.viscondellm attribute)": [[4, "KoPrivateGPT.llm.visconde.ViscondeLLM.chat_offset"]],
        "clear_chat_history() (koprivategpt.llm.base.basellm method)": [[4, "KoPrivateGPT.llm.base.BaseLLM.clear_chat_history"]],
        "generate() (koprivategpt.llm.base.basellm class method)": [[4, "KoPrivateGPT.llm.base.BaseLLM.generate"]],
        "generate_chat() (koprivategpt.llm.base.basellm class method)": [[4, "KoPrivateGPT.llm.base.BaseLLM.generate_chat"]],
        "get_messages() (koprivategpt.llm.basic.basicllm static method)": [[4, "KoPrivateGPT.llm.basic.BasicLLM.get_messages"]],
        "retrieve() (koprivategpt.llm.base.basellm method)": [[4, "KoPrivateGPT.llm.base.BaseLLM.retrieve"]],
        "retrieved_passages (koprivategpt.llm.basic.basicllm attribute)": [[4, "KoPrivateGPT.llm.basic.BasicLLM.retrieved_passages"]],
        "retrieved_passages (koprivategpt.llm.rerank.rerankllm attribute)": [[4, "KoPrivateGPT.llm.rerank.RerankLLM.retrieved_passages"]],
        "retrieved_passages (koprivategpt.llm.visconde.viscondellm attribute)": [[4, "KoPrivateGPT.llm.visconde.ViscondeLLM.retrieved_passages"]],
        "strategyqa_prompt (koprivategpt.llm.visconde.viscondellm attribute)": [[4, "KoPrivateGPT.llm.visconde.ViscondeLLM.strategyqa_prompt"]],
        "stream_end_token (koprivategpt.llm.base.basellm attribute)": [[4, "KoPrivateGPT.llm.base.BaseLLM.stream_end_token"]],
        "basepipeline (class in koprivategpt.pipeline.base)": [[5, "KoPrivateGPT.pipeline.base.BasePipeline"]],
        "basicdatasetpipeline (class in koprivategpt.pipeline.basic)": [[5, "KoPrivateGPT.pipeline.basic.BasicDatasetPipeline"]],
        "basicingestpipeline (class in koprivategpt.pipeline.basic)": [[5, "KoPrivateGPT.pipeline.basic.BasicIngestPipeline"]],
        "basicrunpipeline (class in koprivategpt.pipeline.basic)": [[5, "KoPrivateGPT.pipeline.basic.BasicRunPipeline"]],
        "koprivategpt.pipeline": [[5, "module-KoPrivateGPT.pipeline"]],
        "koprivategpt.pipeline.base": [[5, "module-KoPrivateGPT.pipeline.base"]],
        "koprivategpt.pipeline.basic": [[5, "module-KoPrivateGPT.pipeline.basic"]],
        "koprivategpt.pipeline.selector": [[5, "module-KoPrivateGPT.pipeline.selector"]],
        "moduleselector (class in koprivategpt.pipeline.selector)": [[5, "KoPrivateGPT.pipeline.selector.ModuleSelector"]],
        "get() (koprivategpt.pipeline.selector.moduleselector method)": [[5, "KoPrivateGPT.pipeline.selector.ModuleSelector.get"]],
        "run() (koprivategpt.pipeline.base.basepipeline method)": [[5, "KoPrivateGPT.pipeline.base.BasePipeline.run"]],
        "run() (koprivategpt.pipeline.basic.basicdatasetpipeline method)": [[5, "KoPrivateGPT.pipeline.basic.BasicDatasetPipeline.run"]],
        "run() (koprivategpt.pipeline.basic.basicingestpipeline method)": [[5, "KoPrivateGPT.pipeline.basic.BasicIngestPipeline.run"]],
        "run() (koprivategpt.pipeline.basic.basicrunpipeline method)": [[5, "KoPrivateGPT.pipeline.basic.BasicRunPipeline.run"]],
        "select() (koprivategpt.pipeline.selector.moduleselector method)": [[5, "KoPrivateGPT.pipeline.selector.ModuleSelector.select"]],
        "select_db() (koprivategpt.pipeline.selector.moduleselector method)": [[5, "KoPrivateGPT.pipeline.selector.ModuleSelector.select_db"]],
        "select_file_loader() (koprivategpt.pipeline.selector.moduleselector method)": [[5, "KoPrivateGPT.pipeline.selector.ModuleSelector.select_file_loader"]],
        "select_llm() (koprivategpt.pipeline.selector.moduleselector method)": [[5, "KoPrivateGPT.pipeline.selector.ModuleSelector.select_llm"]],
        "select_retrieval() (koprivategpt.pipeline.selector.moduleselector method)": [[5, "KoPrivateGPT.pipeline.selector.ModuleSelector.select_retrieval"]],
        "select_text_splitter() (koprivategpt.pipeline.selector.moduleselector method)": [[5, "KoPrivateGPT.pipeline.selector.ModuleSelector.select_text_splitter"]],
        "koprivategpt.preprocess": [[6, "module-KoPrivateGPT.preprocess"]],
        "excelloader (class in koprivategpt.preprocess.loader.excel_loader)": [[7, "KoPrivateGPT.preprocess.loader.excel_loader.ExcelLoader"]],
        "fileloader (class in koprivategpt.preprocess.loader.file_loader)": [[7, "KoPrivateGPT.preprocess.loader.file_loader.FileLoader"]],
        "hwploader (class in koprivategpt.preprocess.loader.hwp_loader)": [[7, "KoPrivateGPT.preprocess.loader.hwp_loader.HwpLoader"]],
        "koprivategpt.preprocess.loader": [[7, "module-KoPrivateGPT.preprocess.loader"]],
        "koprivategpt.preprocess.loader.dataset_loader": [[7, "module-KoPrivateGPT.preprocess.loader.dataset_loader"]],
        "koprivategpt.preprocess.loader.excel_loader": [[7, "module-KoPrivateGPT.preprocess.loader.excel_loader"]],
        "koprivategpt.preprocess.loader.file_loader": [[7, "module-KoPrivateGPT.preprocess.loader.file_loader"]],
        "koprivategpt.preprocess.loader.hwp_loader": [[7, "module-KoPrivateGPT.preprocess.loader.hwp_loader"]],
        "koprivategpt.preprocess.loader.mathpix_markdown_loader": [[7, "module-KoPrivateGPT.preprocess.loader.mathpix_markdown_loader"]],
        "koprivategpt.preprocess.loader.nougat_pdf_loader": [[7, "module-KoPrivateGPT.preprocess.loader.nougat_pdf_loader"]],
        "koprivategpt.preprocess.loader.pdf_link_loader": [[7, "module-KoPrivateGPT.preprocess.loader.pdf_link_loader"]],
        "kostrategyqaloader (class in koprivategpt.preprocess.loader.dataset_loader)": [[7, "KoPrivateGPT.preprocess.loader.dataset_loader.KoStrategyQALoader"]],
        "mathpixmarkdownloader (class in koprivategpt.preprocess.loader.mathpix_markdown_loader)": [[7, "KoPrivateGPT.preprocess.loader.mathpix_markdown_loader.MathpixMarkdownLoader"]],
        "nougatpdfloader (class in koprivategpt.preprocess.loader.nougat_pdf_loader)": [[7, "KoPrivateGPT.preprocess.loader.nougat_pdf_loader.NougatPDFLoader"]],
        "pdflinkloader (class in koprivategpt.preprocess.loader.pdf_link_loader)": [[7, "KoPrivateGPT.preprocess.loader.pdf_link_loader.PdfLinkLoader"]],
        "async_request() (koprivategpt.preprocess.loader.hwp_loader.hwploader method)": [[7, "KoPrivateGPT.preprocess.loader.hwp_loader.HwpLoader.async_request"]],
        "lazy_load() (koprivategpt.preprocess.loader.excel_loader.excelloader method)": [[7, "KoPrivateGPT.preprocess.loader.excel_loader.ExcelLoader.lazy_load"]],
        "lazy_load() (koprivategpt.preprocess.loader.file_loader.fileloader method)": [[7, "KoPrivateGPT.preprocess.loader.file_loader.FileLoader.lazy_load"]],
        "lazy_load() (koprivategpt.preprocess.loader.hwp_loader.hwploader method)": [[7, "KoPrivateGPT.preprocess.loader.hwp_loader.HwpLoader.lazy_load"]],
        "lazy_load() (koprivategpt.preprocess.loader.mathpix_markdown_loader.mathpixmarkdownloader method)": [[7, "KoPrivateGPT.preprocess.loader.mathpix_markdown_loader.MathpixMarkdownLoader.lazy_load"]],
        "lazy_load() (koprivategpt.preprocess.loader.nougat_pdf_loader.nougatpdfloader method)": [[7, "KoPrivateGPT.preprocess.loader.nougat_pdf_loader.NougatPDFLoader.lazy_load"]],
        "load() (koprivategpt.preprocess.loader.dataset_loader.kostrategyqaloader method)": [[7, "KoPrivateGPT.preprocess.loader.dataset_loader.KoStrategyQALoader.load"]],
        "load() (koprivategpt.preprocess.loader.excel_loader.excelloader method)": [[7, "KoPrivateGPT.preprocess.loader.excel_loader.ExcelLoader.load"]],
        "load() (koprivategpt.preprocess.loader.file_loader.fileloader method)": [[7, "KoPrivateGPT.preprocess.loader.file_loader.FileLoader.load"]],
        "load() (koprivategpt.preprocess.loader.hwp_loader.hwploader method)": [[7, "KoPrivateGPT.preprocess.loader.hwp_loader.HwpLoader.load"]],
        "load() (koprivategpt.preprocess.loader.mathpix_markdown_loader.mathpixmarkdownloader method)": [[7, "KoPrivateGPT.preprocess.loader.mathpix_markdown_loader.MathpixMarkdownLoader.load"]],
        "load() (koprivategpt.preprocess.loader.nougat_pdf_loader.nougatpdfloader method)": [[7, "KoPrivateGPT.preprocess.loader.nougat_pdf_loader.NougatPDFLoader.load"]],
        "load() (koprivategpt.preprocess.loader.pdf_link_loader.pdflinkloader method)": [[7, "KoPrivateGPT.preprocess.loader.pdf_link_loader.PdfLinkLoader.load"]],
        "split_section() (koprivategpt.preprocess.loader.mathpix_markdown_loader.mathpixmarkdownloader static method)": [[7, "KoPrivateGPT.preprocess.loader.mathpix_markdown_loader.MathpixMarkdownLoader.split_section"]],
        "split_table() (koprivategpt.preprocess.loader.mathpix_markdown_loader.mathpixmarkdownloader static method)": [[7, "KoPrivateGPT.preprocess.loader.mathpix_markdown_loader.MathpixMarkdownLoader.split_table"]],
        "valid_url() (koprivategpt.preprocess.loader.pdf_link_loader.pdflinkloader static method)": [[7, "KoPrivateGPT.preprocess.loader.pdf_link_loader.PdfLinkLoader.valid_url"]],
        "basetextsplitter (class in koprivategpt.preprocess.text_splitter.base)": [[8, "KoPrivateGPT.preprocess.text_splitter.base.BaseTextSplitter"]],
        "koprivategpt.preprocess.text_splitter": [[8, "module-KoPrivateGPT.preprocess.text_splitter"]],
        "koprivategpt.preprocess.text_splitter.base": [[8, "module-KoPrivateGPT.preprocess.text_splitter.base"]],
        "koprivategpt.preprocess.text_splitter.text_splitter": [[8, "module-KoPrivateGPT.preprocess.text_splitter.text_splitter"]],
        "recursivetextsplitter (class in koprivategpt.preprocess.text_splitter.text_splitter)": [[8, "KoPrivateGPT.preprocess.text_splitter.text_splitter.RecursiveTextSplitter"]],
        "split_document() (koprivategpt.preprocess.text_splitter.base.basetextsplitter method)": [[8, "KoPrivateGPT.preprocess.text_splitter.base.BaseTextSplitter.split_document"]],
        "split_document() (koprivategpt.preprocess.text_splitter.text_splitter.recursivetextsplitter method)": [[8, "KoPrivateGPT.preprocess.text_splitter.text_splitter.RecursiveTextSplitter.split_document"]],
        "split_documents() (koprivategpt.preprocess.text_splitter.base.basetextsplitter method)": [[8, "KoPrivateGPT.preprocess.text_splitter.base.BaseTextSplitter.split_documents"]],
        "basereranker (class in koprivategpt.reranker.base)": [[9, "KoPrivateGPT.reranker.base.BaseReranker"]],
        "koprivategpt.reranker": [[9, "module-KoPrivateGPT.reranker"]],
        "koprivategpt.reranker.base": [[9, "module-KoPrivateGPT.reranker.base"]],
        "rerank() (koprivategpt.reranker.base.basereranker method)": [[9, "KoPrivateGPT.reranker.base.BaseReranker.rerank"]],
        "rerank_sliding_window() (koprivategpt.reranker.base.basereranker method)": [[9, "KoPrivateGPT.reranker.base.BaseReranker.rerank_sliding_window"]],
        "koprivategpt.reranker.llm": [[10, "module-KoPrivateGPT.reranker.llm"]],
        "koprivategpt.reranker.llm.llm": [[10, "module-KoPrivateGPT.reranker.llm.llm"]],
        "koprivategpt.reranker.llm.rank_gpt": [[10, "module-KoPrivateGPT.reranker.llm.rank_gpt"]],
        "llmreranker (class in koprivategpt.reranker.llm.llm)": [[10, "KoPrivateGPT.reranker.llm.llm.LLMReranker"]],
        "safeopenai (class in koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.SafeOpenai"]],
        "chat() (koprivategpt.reranker.llm.rank_gpt.safeopenai method)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.SafeOpenai.chat"]],
        "clean_response() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.clean_response"]],
        "create_permutation_instruction() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.create_permutation_instruction"]],
        "find_passages() (koprivategpt.reranker.llm.llm.llmreranker method)": [[10, "KoPrivateGPT.reranker.llm.llm.LLMReranker.find_passages"]],
        "get_post_prompt() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.get_post_prompt"]],
        "get_prefix_prompt() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.get_prefix_prompt"]],
        "make_item() (koprivategpt.reranker.llm.llm.llmreranker method)": [[10, "KoPrivateGPT.reranker.llm.llm.LLMReranker.make_item"]],
        "make_passages() (koprivategpt.reranker.llm.llm.llmreranker method)": [[10, "KoPrivateGPT.reranker.llm.llm.LLMReranker.make_passages"]],
        "max_tokens() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.max_tokens"]],
        "num_tokens_from_messages() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.num_tokens_from_messages"]],
        "permutation_pipeline() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.permutation_pipeline"]],
        "receive_permutation() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.receive_permutation"]],
        "remove_duplicate() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.remove_duplicate"]],
        "rerank() (koprivategpt.reranker.llm.llm.llmreranker method)": [[10, "KoPrivateGPT.reranker.llm.llm.LLMReranker.rerank"]],
        "rerank_sliding_window() (koprivategpt.reranker.llm.llm.llmreranker method)": [[10, "KoPrivateGPT.reranker.llm.llm.LLMReranker.rerank_sliding_window"]],
        "run_llm() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.run_llm"]],
        "sliding_windows() (in module koprivategpt.reranker.llm.rank_gpt)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.sliding_windows"]],
        "text() (koprivategpt.reranker.llm.rank_gpt.safeopenai method)": [[10, "KoPrivateGPT.reranker.llm.rank_gpt.SafeOpenai.text"]],
        "koprivategpt.reranker.pygaggle": [[11, "module-KoPrivateGPT.reranker.pygaggle"]],
        "koprivategpt.reranker.pygaggle.base": [[11, "module-KoPrivateGPT.reranker.pygaggle.base"]],
        "koprivategpt.reranker.pygaggle.monot5": [[11, "module-KoPrivateGPT.reranker.pygaggle.monoT5"]],
        "koprivategpt.reranker.pygaggle.transformer": [[11, "module-KoPrivateGPT.reranker.pygaggle.transformer"]],
        "monot5 (class in koprivategpt.reranker.pygaggle.transformer)": [[11, "KoPrivateGPT.reranker.pygaggle.transformer.MonoT5"]],
        "monot5reranker (class in koprivategpt.reranker.pygaggle.monot5)": [[11, "KoPrivateGPT.reranker.pygaggle.monoT5.MonoT5Reranker"]],
        "query (class in koprivategpt.reranker.pygaggle.base)": [[11, "KoPrivateGPT.reranker.pygaggle.base.Query"]],
        "reranker (class in koprivategpt.reranker.pygaggle.base)": [[11, "KoPrivateGPT.reranker.pygaggle.base.Reranker"]],
        "text (class in koprivategpt.reranker.pygaggle.base)": [[11, "KoPrivateGPT.reranker.pygaggle.base.Text"]],
        "get_model() (koprivategpt.reranker.pygaggle.transformer.monot5 static method)": [[11, "KoPrivateGPT.reranker.pygaggle.transformer.MonoT5.get_model"]],
        "get_prediction_tokens() (koprivategpt.reranker.pygaggle.transformer.monot5 static method)": [[11, "KoPrivateGPT.reranker.pygaggle.transformer.MonoT5.get_prediction_tokens"]],
        "get_tokenizer() (koprivategpt.reranker.pygaggle.transformer.monot5 static method)": [[11, "KoPrivateGPT.reranker.pygaggle.transformer.MonoT5.get_tokenizer"]],
        "rerank() (koprivategpt.reranker.pygaggle.base.reranker method)": [[11, "KoPrivateGPT.reranker.pygaggle.base.Reranker.rerank"]],
        "rerank() (koprivategpt.reranker.pygaggle.monot5.monot5reranker method)": [[11, "KoPrivateGPT.reranker.pygaggle.monoT5.MonoT5Reranker.rerank"]],
        "rerank_sliding_window() (koprivategpt.reranker.pygaggle.monot5.monot5reranker method)": [[11, "KoPrivateGPT.reranker.pygaggle.monoT5.MonoT5Reranker.rerank_sliding_window"]],
        "rescore() (koprivategpt.reranker.pygaggle.base.reranker method)": [[11, "KoPrivateGPT.reranker.pygaggle.base.Reranker.rescore"]],
        "rescore() (koprivategpt.reranker.pygaggle.transformer.monot5 method)": [[11, "KoPrivateGPT.reranker.pygaggle.transformer.MonoT5.rescore"]],
        "duoquerydocumentbatch (class in koprivategpt.reranker.pygaggle.model.tokenize)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.DuoQueryDocumentBatch"]],
        "koprivategpt.reranker.pygaggle.model": [[12, "module-KoPrivateGPT.reranker.pygaggle.model"]],
        "koprivategpt.reranker.pygaggle.model.decode": [[12, "module-KoPrivateGPT.reranker.pygaggle.model.decode"]],
        "koprivategpt.reranker.pygaggle.model.tokenize": [[12, "module-KoPrivateGPT.reranker.pygaggle.model.tokenize"]],
        "querydocumentbatch (class in koprivategpt.reranker.pygaggle.model.tokenize)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatch"]],
        "querydocumentbatchtokenizer (class in koprivategpt.reranker.pygaggle.model.tokenize)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatchTokenizer"]],
        "t5batchtokenizer (class in koprivategpt.reranker.pygaggle.model.tokenize)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.T5BatchTokenizer"]],
        "tokenizerencodemixin (class in koprivategpt.reranker.pygaggle.model.tokenize)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.TokenizerEncodeMixin"]],
        "doc_pairs (koprivategpt.reranker.pygaggle.model.tokenize.duoquerydocumentbatch attribute)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.DuoQueryDocumentBatch.doc_pairs"]],
        "documents (koprivategpt.reranker.pygaggle.model.tokenize.querydocumentbatch attribute)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatch.documents"]],
        "encode() (koprivategpt.reranker.pygaggle.model.tokenize.tokenizerencodemixin method)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.TokenizerEncodeMixin.encode"]],
        "greedy_decode() (in module koprivategpt.reranker.pygaggle.model.decode)": [[12, "KoPrivateGPT.reranker.pygaggle.model.decode.greedy_decode"]],
        "output (koprivategpt.reranker.pygaggle.model.tokenize.duoquerydocumentbatch attribute)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.DuoQueryDocumentBatch.output"]],
        "output (koprivategpt.reranker.pygaggle.model.tokenize.querydocumentbatch attribute)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatch.output"]],
        "query (koprivategpt.reranker.pygaggle.model.tokenize.duoquerydocumentbatch attribute)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.DuoQueryDocumentBatch.query"]],
        "query (koprivategpt.reranker.pygaggle.model.tokenize.querydocumentbatch attribute)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatch.query"]],
        "tokenizer (koprivategpt.reranker.pygaggle.model.tokenize.tokenizerencodemixin attribute)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.TokenizerEncodeMixin.tokenizer"]],
        "tokenizer_kwargs (koprivategpt.reranker.pygaggle.model.tokenize.tokenizerencodemixin attribute)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.TokenizerEncodeMixin.tokenizer_kwargs"]],
        "traverse_duo_query_document() (koprivategpt.reranker.pygaggle.model.tokenize.querydocumentbatchtokenizer method)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatchTokenizer.traverse_duo_query_document"]],
        "traverse_query_document() (koprivategpt.reranker.pygaggle.model.tokenize.querydocumentbatchtokenizer method)": [[12, "KoPrivateGPT.reranker.pygaggle.model.tokenize.QueryDocumentBatchTokenizer.traverse_query_document"]],
        "enct5forsequenceclassification (class in koprivategpt.reranker.tart.modeling_enc_t5)": [[13, "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification"]],
        "enct5tokenizer (class in koprivategpt.reranker.tart.tokenization_enc_t5)": [[13, "KoPrivateGPT.reranker.tart.tokenization_enc_t5.EncT5Tokenizer"]],
        "koprivategpt.reranker.tart": [[13, "module-KoPrivateGPT.reranker.tart"]],
        "koprivategpt.reranker.tart.modeling_enc_t5": [[13, "module-KoPrivateGPT.reranker.tart.modeling_enc_t5"]],
        "koprivategpt.reranker.tart.tart": [[13, "module-KoPrivateGPT.reranker.tart.tart"]],
        "koprivategpt.reranker.tart.tokenization_enc_t5": [[13, "module-KoPrivateGPT.reranker.tart.tokenization_enc_t5"]],
        "tartreranker (class in koprivategpt.reranker.tart.tart)": [[13, "KoPrivateGPT.reranker.tart.tart.TARTReranker"]],
        "build_inputs_with_special_tokens() (koprivategpt.reranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[13, "KoPrivateGPT.reranker.tart.tokenization_enc_t5.EncT5Tokenizer.build_inputs_with_special_tokens"]],
        "create_token_type_ids_from_sequences() (koprivategpt.reranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[13, "KoPrivateGPT.reranker.tart.tokenization_enc_t5.EncT5Tokenizer.create_token_type_ids_from_sequences"]],
        "deparallelize() (koprivategpt.reranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[13, "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.deparallelize"]],
        "forward() (koprivategpt.reranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[13, "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.forward"]],
        "get_encoder() (koprivategpt.reranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[13, "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_encoder"]],
        "get_input_embeddings() (koprivategpt.reranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[13, "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.get_input_embeddings"]],
        "get_special_tokens_mask() (koprivategpt.reranker.tart.tokenization_enc_t5.enct5tokenizer method)": [[13, "KoPrivateGPT.reranker.tart.tokenization_enc_t5.EncT5Tokenizer.get_special_tokens_mask"]],
        "parallelize() (koprivategpt.reranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[13, "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.parallelize"]],
        "rerank() (koprivategpt.reranker.tart.tart.tartreranker method)": [[13, "KoPrivateGPT.reranker.tart.tart.TARTReranker.rerank"]],
        "rerank_sliding_window() (koprivategpt.reranker.tart.tart.tartreranker method)": [[13, "KoPrivateGPT.reranker.tart.tart.TARTReranker.rerank_sliding_window"]],
        "set_input_embeddings() (koprivategpt.reranker.tart.modeling_enc_t5.enct5forsequenceclassification method)": [[13, "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.set_input_embeddings"]],
        "training (koprivategpt.reranker.tart.modeling_enc_t5.enct5forsequenceclassification attribute)": [[13, "KoPrivateGPT.reranker.tart.modeling_enc_t5.EncT5ForSequenceClassification.training"]],
        "koprivategpt.reranker.upr": [[14, "module-KoPrivateGPT.reranker.upr"]],
        "koprivategpt.reranker.upr.upr": [[14, "module-KoPrivateGPT.reranker.upr.upr"]],
        "uprreranker (class in koprivategpt.reranker.upr.upr)": [[14, "KoPrivateGPT.reranker.upr.upr.UPRReranker"]],
        "calculate_likelihood() (koprivategpt.reranker.upr.upr.uprreranker method)": [[14, "KoPrivateGPT.reranker.upr.upr.UPRReranker.calculate_likelihood"]],
        "rerank() (koprivategpt.reranker.upr.upr.uprreranker method)": [[14, "KoPrivateGPT.reranker.upr.upr.UPRReranker.rerank"]],
        "rerank_sliding_window() (koprivategpt.reranker.upr.upr.uprreranker method)": [[14, "KoPrivateGPT.reranker.upr.upr.UPRReranker.rerank_sliding_window"]],
        "basic_system_prompt (koprivategpt.retrieval.hyde.hyderetrieval attribute)": [[15, "KoPrivateGPT.retrieval.hyde.HyDERetrieval.BASIC_SYSTEM_PROMPT"]],
        "bm25retrieval (class in koprivategpt.retrieval.bm25_retrieval)": [[15, "KoPrivateGPT.retrieval.bm25_retrieval.BM25Retrieval"]],
        "baseretrieval (class in koprivategpt.retrieval.base)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval"]],
        "hyderetrieval (class in koprivategpt.retrieval.hyde)": [[15, "KoPrivateGPT.retrieval.hyde.HyDERetrieval"]],
        "hybridretrieval (class in koprivategpt.retrieval.hybrid)": [[15, "KoPrivateGPT.retrieval.hybrid.HybridRetrieval"]],
        "koprivategpt.retrieval": [[15, "module-KoPrivateGPT.retrieval"]],
        "koprivategpt.retrieval.base": [[15, "module-KoPrivateGPT.retrieval.base"]],
        "koprivategpt.retrieval.bm25_retrieval": [[15, "module-KoPrivateGPT.retrieval.bm25_retrieval"]],
        "koprivategpt.retrieval.hybrid": [[15, "module-KoPrivateGPT.retrieval.hybrid"]],
        "koprivategpt.retrieval.hyde": [[15, "module-KoPrivateGPT.retrieval.hyde"]],
        "koprivategpt.retrieval.vectordb_retrieval": [[15, "module-KoPrivateGPT.retrieval.vectordb_retrieval"]],
        "vectordbretrieval (class in koprivategpt.retrieval.vectordb_retrieval)": [[15, "KoPrivateGPT.retrieval.vectordb_retrieval.VectorDBRetrieval"]],
        "create_db() (koprivategpt.retrieval.base.baseretrieval static method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.create_db"]],
        "duplicate_check() (koprivategpt.retrieval.base.baseretrieval static method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.duplicate_check"]],
        "fetch_data() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.fetch_data"]],
        "fetch_data_from_db_origin() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.fetch_data_from_db_origin"]],
        "fetch_each_db() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.fetch_each_db"]],
        "ingest() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.ingest"]],
        "ingest() (koprivategpt.retrieval.bm25_retrieval.bm25retrieval method)": [[15, "KoPrivateGPT.retrieval.bm25_retrieval.BM25Retrieval.ingest"]],
        "ingest() (koprivategpt.retrieval.hybrid.hybridretrieval method)": [[15, "KoPrivateGPT.retrieval.hybrid.HybridRetrieval.ingest"]],
        "ingest() (koprivategpt.retrieval.hyde.hyderetrieval method)": [[15, "KoPrivateGPT.retrieval.hyde.HyDERetrieval.ingest"]],
        "ingest() (koprivategpt.retrieval.vectordb_retrieval.vectordbretrieval method)": [[15, "KoPrivateGPT.retrieval.vectordb_retrieval.VectorDBRetrieval.ingest"]],
        "is_created() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.is_created"]],
        "load_data() (koprivategpt.retrieval.bm25_retrieval.bm25retrieval static method)": [[15, "KoPrivateGPT.retrieval.bm25_retrieval.BM25Retrieval.load_data"]],
        "make_prompt() (koprivategpt.retrieval.hyde.hyderetrieval static method)": [[15, "KoPrivateGPT.retrieval.hyde.HyDERetrieval.make_prompt"]],
        "min_max_normalization() (koprivategpt.retrieval.hybrid.hybridretrieval static method)": [[15, "KoPrivateGPT.retrieval.hybrid.HybridRetrieval.min_max_normalization"]],
        "persist() (koprivategpt.retrieval.bm25_retrieval.bm25retrieval method)": [[15, "KoPrivateGPT.retrieval.bm25_retrieval.BM25Retrieval.persist"]],
        "retrieve() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.retrieve"]],
        "retrieve() (koprivategpt.retrieval.bm25_retrieval.bm25retrieval method)": [[15, "KoPrivateGPT.retrieval.bm25_retrieval.BM25Retrieval.retrieve"]],
        "retrieve() (koprivategpt.retrieval.hybrid.hybridretrieval method)": [[15, "KoPrivateGPT.retrieval.hybrid.HybridRetrieval.retrieve"]],
        "retrieve() (koprivategpt.retrieval.hyde.hyderetrieval method)": [[15, "KoPrivateGPT.retrieval.hyde.HyDERetrieval.retrieve"]],
        "retrieve() (koprivategpt.retrieval.vectordb_retrieval.vectordbretrieval method)": [[15, "KoPrivateGPT.retrieval.vectordb_retrieval.VectorDBRetrieval.retrieve"]],
        "retrieve_id() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.retrieve_id"]],
        "retrieve_id() (koprivategpt.retrieval.bm25_retrieval.bm25retrieval method)": [[15, "KoPrivateGPT.retrieval.bm25_retrieval.BM25Retrieval.retrieve_id"]],
        "retrieve_id() (koprivategpt.retrieval.hybrid.hybridretrieval method)": [[15, "KoPrivateGPT.retrieval.hybrid.HybridRetrieval.retrieve_id"]],
        "retrieve_id() (koprivategpt.retrieval.hyde.hyderetrieval method)": [[15, "KoPrivateGPT.retrieval.hyde.HyDERetrieval.retrieve_id"]],
        "retrieve_id() (koprivategpt.retrieval.vectordb_retrieval.vectordbretrieval method)": [[15, "KoPrivateGPT.retrieval.vectordb_retrieval.VectorDBRetrieval.retrieve_id"]],
        "retrieve_id_with_scores() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.retrieve_id_with_scores"]],
        "retrieve_id_with_scores() (koprivategpt.retrieval.bm25_retrieval.bm25retrieval method)": [[15, "KoPrivateGPT.retrieval.bm25_retrieval.BM25Retrieval.retrieve_id_with_scores"]],
        "retrieve_id_with_scores() (koprivategpt.retrieval.hybrid.hybridretrieval method)": [[15, "KoPrivateGPT.retrieval.hybrid.HybridRetrieval.retrieve_id_with_scores"]],
        "retrieve_id_with_scores() (koprivategpt.retrieval.hyde.hyderetrieval method)": [[15, "KoPrivateGPT.retrieval.hyde.HyDERetrieval.retrieve_id_with_scores"]],
        "retrieve_id_with_scores() (koprivategpt.retrieval.vectordb_retrieval.vectordbretrieval method)": [[15, "KoPrivateGPT.retrieval.vectordb_retrieval.VectorDBRetrieval.retrieve_id_with_scores"]],
        "retrieve_id_with_scores_parallel() (koprivategpt.retrieval.hybrid.hybridretrieval method)": [[15, "KoPrivateGPT.retrieval.hybrid.HybridRetrieval.retrieve_id_with_scores_parallel"]],
        "retrieve_with_filter() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.retrieve_with_filter"]],
        "search_data() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.search_data"]],
        "search_data_from_db_origin() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.search_data_from_db_origin"]],
        "search_each_db() (koprivategpt.retrieval.base.baseretrieval method)": [[15, "KoPrivateGPT.retrieval.base.BaseRetrieval.search_each_db"]],
        "dborigin (class in koprivategpt.schema.db_origin)": [[16, "KoPrivateGPT.schema.db_origin.DBOrigin"]],
        "koprivategpt.schema": [[16, "module-KoPrivateGPT.schema"]],
        "koprivategpt.schema.db_origin": [[16, "module-KoPrivateGPT.schema.db_origin"]],
        "koprivategpt.schema.passage": [[16, "module-KoPrivateGPT.schema.passage"]],
        "passage (class in koprivategpt.schema.passage)": [[16, "KoPrivateGPT.schema.passage.Passage"]],
        "content (koprivategpt.schema.passage.passage attribute)": [[16, "KoPrivateGPT.schema.passage.Passage.content"]],
        "db_path (koprivategpt.schema.db_origin.dborigin attribute)": [[16, "KoPrivateGPT.schema.db_origin.DBOrigin.db_path"]],
        "db_type (koprivategpt.schema.db_origin.dborigin attribute)": [[16, "KoPrivateGPT.schema.db_origin.DBOrigin.db_type"]],
        "filepath (koprivategpt.schema.passage.passage attribute)": [[16, "KoPrivateGPT.schema.passage.Passage.filepath"]],
        "id (koprivategpt.schema.passage.passage attribute)": [[16, "KoPrivateGPT.schema.passage.Passage.id"]],
        "is_exactly_same() (koprivategpt.schema.passage.passage method)": [[16, "KoPrivateGPT.schema.passage.Passage.is_exactly_same"]],
        "metadata_etc (koprivategpt.schema.passage.passage attribute)": [[16, "KoPrivateGPT.schema.passage.Passage.metadata_etc"]],
        "next_passage_id (koprivategpt.schema.passage.passage attribute)": [[16, "KoPrivateGPT.schema.passage.Passage.next_passage_id"]],
        "previous_passage_id (koprivategpt.schema.passage.passage attribute)": [[16, "KoPrivateGPT.schema.passage.Passage.previous_passage_id"]],
        "to_dict() (koprivategpt.schema.db_origin.dborigin method)": [[16, "KoPrivateGPT.schema.db_origin.DBOrigin.to_dict"]],
        "to_dict() (koprivategpt.schema.passage.passage method)": [[16, "KoPrivateGPT.schema.passage.Passage.to_dict"]],
        "to_document() (koprivategpt.schema.passage.passage method)": [[16, "KoPrivateGPT.schema.passage.Passage.to_document"]],
        "evidenceextractor (class in koprivategpt.utils.evidence_extractor)": [[17, "KoPrivateGPT.utils.evidence_extractor.EvidenceExtractor"]],
        "filecache (class in koprivategpt.utils.file_cache)": [[17, "KoPrivateGPT.utils.file_cache.FileCache"]],
        "filechecker (class in koprivategpt.utils.util)": [[17, "KoPrivateGPT.utils.util.FileChecker"]],
        "koprivategpt.utils": [[17, "module-KoPrivateGPT.utils"]],
        "koprivategpt.utils.evidence_extractor": [[17, "module-KoPrivateGPT.utils.evidence_extractor"]],
        "koprivategpt.utils.file_cache": [[17, "module-KoPrivateGPT.utils.file_cache"]],
        "koprivategpt.utils.query_decompose": [[17, "module-KoPrivateGPT.utils.query_decompose"]],
        "koprivategpt.utils.util": [[17, "module-KoPrivateGPT.utils.util"]],
        "querydecomposition (class in koprivategpt.utils.query_decompose)": [[17, "KoPrivateGPT.utils.query_decompose.QueryDecomposition"]],
        "stoppingcriteriasub (class in koprivategpt.utils.util)": [[17, "KoPrivateGPT.utils.util.StoppingCriteriaSub"]],
        "check_type() (koprivategpt.utils.util.filechecker method)": [[17, "KoPrivateGPT.utils.util.FileChecker.check_type"]],
        "decompose() (koprivategpt.utils.query_decompose.querydecomposition method)": [[17, "KoPrivateGPT.utils.query_decompose.QueryDecomposition.decompose"]],
        "decompose_prompt (koprivategpt.utils.query_decompose.querydecomposition attribute)": [[17, "KoPrivateGPT.utils.query_decompose.QueryDecomposition.decompose_prompt"]],
        "delete_duplicate() (koprivategpt.utils.file_cache.filecache method)": [[17, "KoPrivateGPT.utils.file_cache.FileCache.delete_duplicate"]],
        "extract() (koprivategpt.utils.evidence_extractor.evidenceextractor method)": [[17, "KoPrivateGPT.utils.evidence_extractor.EvidenceExtractor.extract"]],
        "generate() (koprivategpt.utils.query_decompose.querydecomposition method)": [[17, "KoPrivateGPT.utils.query_decompose.QueryDecomposition.generate"]],
        "is_exist() (koprivategpt.utils.util.filechecker method)": [[17, "KoPrivateGPT.utils.util.FileChecker.is_exist"]],
        "set_api_base() (in module koprivategpt.utils.util)": [[17, "KoPrivateGPT.utils.util.set_api_base"]],
        "slice_stop_words() (in module koprivategpt.utils.util)": [[17, "KoPrivateGPT.utils.util.slice_stop_words"]],
        "text_modifier() (in module koprivategpt.utils.util)": [[17, "KoPrivateGPT.utils.util.text_modifier"]],
        "contriever (koprivategpt.utils.embed.embeddingfactory.embeddingtype attribute)": [[18, "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingType.CONTRIEVER"]],
        "embeddingfactory (class in koprivategpt.utils.embed.embeddingfactory)": [[18, "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingFactory"]],
        "embeddingtype (class in koprivategpt.utils.embed.embeddingfactory)": [[18, "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingType"]],
        "kosimcse (koprivategpt.utils.embed.embeddingfactory.embeddingtype attribute)": [[18, "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingType.KOSIMCSE"]],
        "ko_sroberta_multitask (koprivategpt.utils.embed.embeddingfactory.embeddingtype attribute)": [[18, "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingType.KO_SROBERTA_MULTITASK"]],
        "koprivategpt.utils.embed": [[18, "module-KoPrivateGPT.utils.embed"]],
        "koprivategpt.utils.embed.delete_embeddings": [[18, "module-KoPrivateGPT.utils.embed.delete_embeddings"]],
        "koprivategpt.utils.embed.embeddingfactory": [[18, "module-KoPrivateGPT.utils.embed.embeddingfactory"]],
        "multilingual_e5 (koprivategpt.utils.embed.embeddingfactory.embeddingtype attribute)": [[18, "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingType.MULTILINGUAL_E5"]],
        "openai (koprivategpt.utils.embed.embeddingfactory.embeddingtype attribute)": [[18, "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingType.OPENAI"]],
        "delete_embeddings_vectordb() (in module koprivategpt.utils.embed.delete_embeddings)": [[18, "KoPrivateGPT.utils.embed.delete_embeddings.delete_embeddings_vectordb"]],
        "delete_sparse_retrieval_index() (in module koprivategpt.utils.embed.delete_embeddings)": [[18, "KoPrivateGPT.utils.embed.delete_embeddings.delete_sparse_retrieval_index"]],
        "get() (koprivategpt.utils.embed.embeddingfactory.embeddingfactory method)": [[18, "KoPrivateGPT.utils.embed.embeddingfactory.EmbeddingFactory.get"]],
        "koprivategpt.utils.linker": [[19, "module-KoPrivateGPT.utils.linker"]],
        "koprivategpt.utils.linker.redisdbsingleton": [[19, "module-KoPrivateGPT.utils.linker.redisdbSingleton"]],
        "redisdbsingleton (class in koprivategpt.utils.linker.redisdbsingleton)": [[19, "KoPrivateGPT.utils.linker.redisdbSingleton.RedisDBSingleton"]],
        "connection_check() (koprivategpt.utils.linker.redisdbsingleton.redisdbsingleton method)": [[19, "KoPrivateGPT.utils.linker.redisdbSingleton.RedisDBSingleton.connection_check"]],
        "flush_db() (koprivategpt.utils.linker.redisdbsingleton.redisdbsingleton method)": [[19, "KoPrivateGPT.utils.linker.redisdbSingleton.RedisDBSingleton.flush_db"]],
        "get_json() (koprivategpt.utils.linker.redisdbsingleton.redisdbsingleton method)": [[19, "KoPrivateGPT.utils.linker.redisdbSingleton.RedisDBSingleton.get_json"]],
        "chromaslim (class in koprivategpt.utils.vectorstore.chroma)": [[20, "KoPrivateGPT.utils.vectorstore.chroma.ChromaSlim"]],
        "koprivategpt.utils.vectorstore": [[20, "module-KoPrivateGPT.utils.vectorstore"]],
        "koprivategpt.utils.vectorstore.base": [[20, "module-KoPrivateGPT.utils.vectorstore.base"]],
        "koprivategpt.utils.vectorstore.chroma": [[20, "module-KoPrivateGPT.utils.vectorstore.chroma"]],
        "koprivategpt.utils.vectorstore.pinecone": [[20, "module-KoPrivateGPT.utils.vectorstore.pinecone"]],
        "pineconeslim (class in koprivategpt.utils.vectorstore.pinecone)": [[20, "KoPrivateGPT.utils.vectorstore.pinecone.PineconeSlim"]],
        "slimvectorstore (class in koprivategpt.utils.vectorstore.base)": [[20, "KoPrivateGPT.utils.vectorstore.base.SlimVectorStore"]],
        "add_passage() (koprivategpt.utils.vectorstore.base.slimvectorstore method)": [[20, "KoPrivateGPT.utils.vectorstore.base.SlimVectorStore.add_passage"]],
        "add_passages() (koprivategpt.utils.vectorstore.base.slimvectorstore method)": [[20, "KoPrivateGPT.utils.vectorstore.base.SlimVectorStore.add_passages"]],
        "add_passages() (koprivategpt.utils.vectorstore.chroma.chromaslim method)": [[20, "KoPrivateGPT.utils.vectorstore.chroma.ChromaSlim.add_passages"]],
        "add_passages() (koprivategpt.utils.vectorstore.pinecone.pineconeslim method)": [[20, "KoPrivateGPT.utils.vectorstore.pinecone.PineconeSlim.add_passages"]]
    }
})